#pragma checksum "D:\YourNoteUWP\YourNoteUWP\View\SignInPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "479D5AFC8BE9EAAA55E64FADE884F17E4766E9AF947CE8C066414BC9F468CB5D"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YourNoteUWP.View
{
    partial class SignInPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_PlaceholderText(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.PlaceholderText = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_PasswordBox_Password(global::Windows.UI.Xaml.Controls.PasswordBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Password = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_PasswordBox_PasswordRevealMode(global::Windows.UI.Xaml.Controls.PasswordBox obj, global::Windows.UI.Xaml.Controls.PasswordRevealMode value)
            {
                obj.PasswordRevealMode = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_PasswordBox_PlaceholderText(global::Windows.UI.Xaml.Controls.PasswordBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.PlaceholderText = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SignInPage_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISignInPage_Bindings
        {
            private global::YourNoteUWP.Models.User dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;

            public SignInPage_obj3_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 43 && columnNumber == 25)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 25)
                {
                    isobj5TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // View\SignInPage.xaml line 25
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 4: // View\SignInPage.xaml line 40
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // View\SignInPage.xaml line 44
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.User) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ISignInPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.User)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.User obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_userId(obj.userId, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\SignInPage.xaml line 40
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_userId(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\SignInPage.xaml line 44
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SignInPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISignInPage_Bindings
        {
            private global::YourNoteUWP.View.SignInPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj7;
            private global::Windows.UI.Xaml.Controls.Grid obj8;
            private global::Windows.UI.Xaml.Controls.ListView obj9;
            private global::Windows.UI.Xaml.Controls.TextBox obj10;
            private global::Windows.UI.Xaml.Controls.PasswordBox obj11;
            private global::Windows.UI.Xaml.Controls.CheckBox obj12;
            private global::Windows.UI.Xaml.Controls.HyperlinkButton obj13;
            private global::Windows.UI.Xaml.Controls.Button obj14;
            private global::Windows.UI.Xaml.Controls.FontIcon obj16;
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;
            private global::Windows.UI.Xaml.Controls.FontIcon obj19;
            private global::Windows.UI.Xaml.Controls.TextBlock obj20;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj9ItemClick;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj10TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj11PasswordChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj12Checked;
            private global::Windows.UI.Xaml.RoutedEventHandler obj12Unchecked;
            private global::Windows.UI.Xaml.RoutedEventHandler obj13Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj14Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7VisibilityDisabled = false;
            private static bool isobj8VisibilityDisabled = false;
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj10PlaceholderTextDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11PasswordDisabled = false;
            private static bool isobj11PasswordRevealModeDisabled = false;
            private static bool isobj11PlaceholderTextDisabled = false;
            private static bool isobj12IsCheckedDisabled = false;
            private static bool isobj16VisibilityDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj17VisibilityDisabled = false;
            private static bool isobj19VisibilityDisabled = false;
            private static bool isobj20TextDisabled = false;
            private static bool isobj20VisibilityDisabled = false;

            private SignInPage_obj1_BindingsTracking bindingsTracking;

            public SignInPage_obj1_Bindings()
            {
                this.bindingsTracking = new SignInPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 275 && columnNumber == 17)
                {
                    isobj7VisibilityDisabled = true;
                }
                else if (lineNumber == 287 && columnNumber == 17)
                {
                    isobj8VisibilityDisabled = true;
                }
                else if (lineNumber == 309 && columnNumber == 21)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 306 && columnNumber == 21)
                {
                    this.obj9.ItemClick -= obj9ItemClick;
                }
                else if (lineNumber == 141 && columnNumber == 21)
                {
                    isobj10PlaceholderTextDisabled = true;
                }
                else if (lineNumber == 143 && columnNumber == 21)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 144 && columnNumber == 21)
                {
                    this.obj10.TextChanged -= obj10TextChanged;
                }
                else if (lineNumber == 171 && columnNumber == 21)
                {
                    isobj11PasswordDisabled = true;
                }
                else if (lineNumber == 173 && columnNumber == 21)
                {
                    isobj11PasswordRevealModeDisabled = true;
                }
                else if (lineNumber == 174 && columnNumber == 21)
                {
                    isobj11PlaceholderTextDisabled = true;
                }
                else if (lineNumber == 172 && columnNumber == 21)
                {
                    this.obj11.PasswordChanged -= obj11PasswordChanged;
                }
                else if (lineNumber == 207 && columnNumber == 21)
                {
                    isobj12IsCheckedDisabled = true;
                }
                else if (lineNumber == 206 && columnNumber == 21)
                {
                    this.obj12.Checked -= obj12Checked;
                }
                else if (lineNumber == 209 && columnNumber == 21)
                {
                    this.obj12.Unchecked -= obj12Unchecked;
                }
                else if (lineNumber == 248 && columnNumber == 25)
                {
                    this.obj13.Click -= obj13Click;
                }
                else if (lineNumber == 218 && columnNumber == 25)
                {
                    this.obj14.Click -= obj14Click;
                }
                else if (lineNumber == 188 && columnNumber == 29)
                {
                    isobj16VisibilityDisabled = true;
                }
                else if (lineNumber == 193 && columnNumber == 33)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 194 && columnNumber == 33)
                {
                    isobj17VisibilityDisabled = true;
                }
                else if (lineNumber == 157 && columnNumber == 29)
                {
                    isobj19VisibilityDisabled = true;
                }
                else if (lineNumber == 161 && columnNumber == 33)
                {
                    isobj20TextDisabled = true;
                }
                else if (lineNumber == 162 && columnNumber == 33)
                {
                    isobj20VisibilityDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // View\SignInPage.xaml line 270
                        this.obj7 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 8: // View\SignInPage.xaml line 279
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 9: // View\SignInPage.xaml line 300
                        this.obj9 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        this.obj9ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot._signInPageViewModel.FrequentEmailItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListView)target).ItemClick += obj9ItemClick;
                        break;
                    case 10: // View\SignInPage.xaml line 137
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj10TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot._signInPageViewModel.EmailBoxTextChanged();
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj10TextChanged;
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // View\SignInPage.xaml line 168
                        this.obj11 = (global::Windows.UI.Xaml.Controls.PasswordBox)target;
                        this.obj11PasswordChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot._signInPageViewModel.PasswordBoxTextChanged();
                        };
                        ((global::Windows.UI.Xaml.Controls.PasswordBox)target).PasswordChanged += obj11PasswordChanged;
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // View\SignInPage.xaml line 203
                        this.obj12 = (global::Windows.UI.Xaml.Controls.CheckBox)target;
                        this.obj12Checked = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot._signInPageViewModel.RevealModeCheckBoxChecked();
                        };
                        ((global::Windows.UI.Xaml.Controls.CheckBox)target).Checked += obj12Checked;
                        this.obj12Unchecked = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot._signInPageViewModel.RevealModeCheckBoxChecked();
                        };
                        ((global::Windows.UI.Xaml.Controls.CheckBox)target).Unchecked += obj12Unchecked;
                        break;
                    case 13: // View\SignInPage.xaml line 246
                        this.obj13 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)target;
                        this.obj13Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot._signInPageViewModel.NavigateToSignUpClick();
                        };
                        ((global::Windows.UI.Xaml.Controls.HyperlinkButton)target).Click += obj13Click;
                        break;
                    case 14: // View\SignInPage.xaml line 214
                        this.obj14 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj14Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot._signInPageViewModel.LogInButtonClick();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj14Click;
                        break;
                    case 16: // View\SignInPage.xaml line 185
                        this.obj16 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 17: // View\SignInPage.xaml line 191
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 19: // View\SignInPage.xaml line 154
                        this.obj19 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 20: // View\SignInPage.xaml line 159
                        this.obj20 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISignInPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.View.SignInPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.View.SignInPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__signInPageViewModel(obj._signInPageViewModel, phase);
                    }
                }
            }
            private void Update__signInPageViewModel(global::YourNoteUWP.ViewModels.SignInPageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__signInPageViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__signInPageViewModel_ColumnDividerVisibility(obj.ColumnDividerVisibility, phase);
                        this.Update__signInPageViewModel_FrequentEmailBoxVisibility(obj.FrequentEmailBoxVisibility, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update__signInPageViewModel_FrequentEmailItemSource(obj.FrequentEmailItemSource, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__signInPageViewModel_EmailBoxPlaceHolderText(obj.EmailBoxPlaceHolderText, phase);
                        this.Update__signInPageViewModel_EmailBoxContent(obj.EmailBoxContent, phase);
                        this.Update__signInPageViewModel_PasswordBoxPassword(obj.PasswordBoxPassword, phase);
                        this.Update__signInPageViewModel_PasswordBoxRevealMode(obj.PasswordBoxRevealMode, phase);
                        this.Update__signInPageViewModel_PasswordBoxPlaceHolderText(obj.PasswordBoxPlaceHolderText, phase);
                        this.Update__signInPageViewModel_RevealModeCheckBoxIsChecked(obj.RevealModeCheckBoxIsChecked, phase);
                        this.Update__signInPageViewModel_PasswordCheckVisibility(obj.PasswordCheckVisibility, phase);
                        this.Update__signInPageViewModel_PasswordToolTipContent(obj.PasswordToolTipContent, phase);
                        this.Update__signInPageViewModel_PasswordToolTipVisibility(obj.PasswordToolTipVisibility, phase);
                        this.Update__signInPageViewModel_EmailCheckVisibility(obj.EmailCheckVisibility, phase);
                        this.Update__signInPageViewModel_EmailToolTipContent(obj.EmailToolTipContent, phase);
                        this.Update__signInPageViewModel_EmailToolTipVisibility(obj.EmailToolTipVisibility, phase);
                    }
                }
            }
            private void Update__signInPageViewModel_ColumnDividerVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 270
                    if (!isobj7VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj7, obj);
                    }
                }
            }
            private void Update__signInPageViewModel_FrequentEmailBoxVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 279
                    if (!isobj8VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, obj);
                    }
                }
            }
            private void Update__signInPageViewModel_FrequentEmailItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.User> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\SignInPage.xaml line 300
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                }
            }
            private void Update__signInPageViewModel_EmailBoxPlaceHolderText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 137
                    if (!isobj10PlaceholderTextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_PlaceholderText(this.obj10, obj, null);
                    }
                }
            }
            private void Update__signInPageViewModel_EmailBoxContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 137
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update__signInPageViewModel_PasswordBoxPassword(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 168
                    if (!isobj11PasswordDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_Password(this.obj11, obj, null);
                    }
                }
            }
            private void Update__signInPageViewModel_PasswordBoxRevealMode(global::Windows.UI.Xaml.Controls.PasswordRevealMode obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 168
                    if (!isobj11PasswordRevealModeDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_PasswordRevealMode(this.obj11, obj);
                    }
                }
            }
            private void Update__signInPageViewModel_PasswordBoxPlaceHolderText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 168
                    if (!isobj11PlaceholderTextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_PlaceholderText(this.obj11, obj, null);
                    }
                }
            }
            private void Update__signInPageViewModel_RevealModeCheckBoxIsChecked(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 203
                    if (!isobj12IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj12, obj, null);
                    }
                }
            }
            private void Update__signInPageViewModel_PasswordCheckVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 185
                    if (!isobj16VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj16, obj);
                    }
                }
            }
            private void Update__signInPageViewModel_PasswordToolTipContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 191
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update__signInPageViewModel_PasswordToolTipVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 191
                    if (!isobj17VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj17, obj);
                    }
                }
            }
            private void Update__signInPageViewModel_EmailCheckVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 154
                    if (!isobj19VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj19, obj);
                    }
                }
            }
            private void Update__signInPageViewModel_EmailToolTipContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 159
                    if (!isobj20TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj20, obj, null);
                    }
                }
            }
            private void Update__signInPageViewModel_EmailToolTipVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SignInPage.xaml line 159
                    if (!isobj20VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj20, obj);
                    }
                }
            }
            private void UpdateTwoWay_10_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot._signInPageViewModel != null)
                        {
                            this.dataRoot._signInPageViewModel.EmailBoxContent = this.obj10.Text;
                        }
                    }
                }
            }
            private void UpdateTwoWay_11_Password()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot._signInPageViewModel != null)
                        {
                            this.dataRoot._signInPageViewModel.PasswordBoxPassword = this.obj11.Password;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SignInPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<SignInPage_obj1_Bindings> weakRefToBindingObj; 

                public SignInPage_obj1_BindingsTracking(SignInPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SignInPage_obj1_Bindings>(obj);
                }

                public SignInPage_obj1_Bindings TryGetBindingObject()
                {
                    SignInPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners__signInPageViewModel(null);
                }

                public void PropertyChanged__signInPageViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SignInPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::YourNoteUWP.ViewModels.SignInPageViewModel obj = sender as global::YourNoteUWP.ViewModels.SignInPageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__signInPageViewModel_ColumnDividerVisibility(obj.ColumnDividerVisibility, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_FrequentEmailBoxVisibility(obj.FrequentEmailBoxVisibility, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_EmailBoxPlaceHolderText(obj.EmailBoxPlaceHolderText, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_EmailBoxContent(obj.EmailBoxContent, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_PasswordBoxPassword(obj.PasswordBoxPassword, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_PasswordBoxRevealMode(obj.PasswordBoxRevealMode, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_PasswordBoxPlaceHolderText(obj.PasswordBoxPlaceHolderText, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_RevealModeCheckBoxIsChecked(obj.RevealModeCheckBoxIsChecked, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_PasswordCheckVisibility(obj.PasswordCheckVisibility, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_PasswordToolTipContent(obj.PasswordToolTipContent, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_PasswordToolTipVisibility(obj.PasswordToolTipVisibility, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_EmailCheckVisibility(obj.EmailCheckVisibility, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_EmailToolTipContent(obj.EmailToolTipContent, DATA_CHANGED);
                                bindings.Update__signInPageViewModel_EmailToolTipVisibility(obj.EmailToolTipVisibility, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ColumnDividerVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_ColumnDividerVisibility(obj.ColumnDividerVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FrequentEmailBoxVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_FrequentEmailBoxVisibility(obj.FrequentEmailBoxVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailBoxPlaceHolderText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_EmailBoxPlaceHolderText(obj.EmailBoxPlaceHolderText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailBoxContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_EmailBoxContent(obj.EmailBoxContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordBoxPassword":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_PasswordBoxPassword(obj.PasswordBoxPassword, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordBoxRevealMode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_PasswordBoxRevealMode(obj.PasswordBoxRevealMode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordBoxPlaceHolderText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_PasswordBoxPlaceHolderText(obj.PasswordBoxPlaceHolderText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RevealModeCheckBoxIsChecked":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_RevealModeCheckBoxIsChecked(obj.RevealModeCheckBoxIsChecked, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordCheckVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_PasswordCheckVisibility(obj.PasswordCheckVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordToolTipContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_PasswordToolTipContent(obj.PasswordToolTipContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PasswordToolTipVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_PasswordToolTipVisibility(obj.PasswordToolTipVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailCheckVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_EmailCheckVisibility(obj.EmailCheckVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailToolTipContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_EmailToolTipContent(obj.EmailToolTipContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EmailToolTipVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__signInPageViewModel_EmailToolTipVisibility(obj.EmailToolTipVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::YourNoteUWP.ViewModels.SignInPageViewModel cache__signInPageViewModel = null;
                public void UpdateChildListeners__signInPageViewModel(global::YourNoteUWP.ViewModels.SignInPageViewModel obj)
                {
                    if (obj != cache__signInPageViewModel)
                    {
                        if (cache__signInPageViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__signInPageViewModel).PropertyChanged -= PropertyChanged__signInPageViewModel;
                            cache__signInPageViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache__signInPageViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__signInPageViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_10(global::Windows.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Text();
                        }
                    };
                }
                public void RegisterTwoWayListener_11(global::Windows.UI.Xaml.Controls.PasswordBox sourceObject)
                {
                    sourceObject.LostFocus += (sender, e) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_Password();
                        }
                    };
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 6: // View\SignInPage.xaml line 59
                {
                    this.LogInPageScrollViewer = (global::Windows.UI.Xaml.Controls.ScrollViewer)(target);
                }
                break;
            case 7: // View\SignInPage.xaml line 270
                {
                    this.ColumnDivider = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 8: // View\SignInPage.xaml line 279
                {
                    this.FrequentEmailBox = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 9: // View\SignInPage.xaml line 300
                {
                    this.FrequentEmail = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 10: // View\SignInPage.xaml line 137
                {
                    this.EmailBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 11: // View\SignInPage.xaml line 168
                {
                    this.PasswordBox = (global::Windows.UI.Xaml.Controls.PasswordBox)(target);
                }
                break;
            case 12: // View\SignInPage.xaml line 203
                {
                    this.RevealModeCheckBox = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 13: // View\SignInPage.xaml line 246
                {
                    this.NavigateToSignUp = (global::Windows.UI.Xaml.Controls.HyperlinkButton)(target);
                }
                break;
            case 14: // View\SignInPage.xaml line 214
                {
                    this.LogInButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 15: // View\SignInPage.xaml line 179
                {
                    this.PasswordFontBorderStyle = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 16: // View\SignInPage.xaml line 185
                {
                    this.PasswordCheck = (global::Windows.UI.Xaml.Controls.FontIcon)(target);
                }
                break;
            case 17: // View\SignInPage.xaml line 191
                {
                    this.PasswordToolTip = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 18: // View\SignInPage.xaml line 148
                {
                    this.EmailFontBorderStyle = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 19: // View\SignInPage.xaml line 154
                {
                    this.EmailCheck = (global::Windows.UI.Xaml.Controls.FontIcon)(target);
                }
                break;
            case 20: // View\SignInPage.xaml line 159
                {
                    this.EmailToolTip = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\SignInPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    SignInPage_obj1_Bindings bindings = new SignInPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // View\SignInPage.xaml line 25
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    SignInPage_obj3_Bindings bindings = new SignInPage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

