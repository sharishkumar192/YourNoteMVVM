#pragma checksum "D:\YourNoteUWP\YourNoteUWP\View\UserControl\NoteEditOptionsControl.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "EE8B199E31461850B35E0A9F22C091FA8C7BB7C372B2CB9855E47166447B6EB7"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YourNoteUWP
{
    partial class NoteEditOptionsControl : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Shapes_Shape_Fill(global::Windows.UI.Xaml.Shapes.Shape obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Fill = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class NoteEditOptionsControl_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            INoteEditOptionsControl_Bindings
        {
            private global::YourNoteUWP.Models.User dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;
            private static bool isobj5TextDisabled = false;

            public NoteEditOptionsControl_obj3_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 43 && columnNumber == 21)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 21)
                {
                    isobj5TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // View\UserControl\NoteEditOptionsControl.xaml line 34
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 4: // View\UserControl\NoteEditOptionsControl.xaml line 38
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // View\UserControl\NoteEditOptionsControl.xaml line 44
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.User) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // INoteEditOptionsControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.User)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.User obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_userId(obj.userId, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 38
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_userId(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 44
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class NoteEditOptionsControl_obj7_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            INoteEditOptionsControl_Bindings
        {
            private global::YourNoteUWP.Models.User dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;

            public NoteEditOptionsControl_obj7_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 22 && columnNumber == 21)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 21)
                {
                    isobj9TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // View\UserControl\NoteEditOptionsControl.xaml line 16
                        this.obj7 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 8: // View\UserControl\NoteEditOptionsControl.xaml line 17
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // View\UserControl\NoteEditOptionsControl.xaml line 23
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj7.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.User) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // INoteEditOptionsControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.User)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.User obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_userId(obj.userId, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 17
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_userId(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 23
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class NoteEditOptionsControl_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            INoteEditOptionsControl_Bindings
        {
            private global::YourNoteUWP.NoteEditOptionsControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Button obj11;
            private global::Windows.UI.Xaml.Controls.Button obj12;
            private global::Windows.UI.Xaml.Controls.Button obj13;
            private global::Windows.UI.Xaml.Controls.Button obj14;
            private global::Windows.UI.Xaml.Controls.Button obj15;
            private global::Windows.UI.Xaml.Controls.Button obj16;
            private global::Windows.UI.Xaml.Controls.Button obj18;
            private global::Windows.UI.Xaml.Controls.Button obj19;
            private global::Windows.UI.Xaml.Controls.ListView obj20;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj21;
            private global::Windows.UI.Xaml.Controls.ListBox obj22;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj11Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj12Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj13Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj14Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj15Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj16Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj18Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj19Click;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj22SelectionChanged;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj18VisibilityDisabled = false;
            private static bool isobj19VisibilityDisabled = false;
            private static bool isobj20ItemsSourceDisabled = false;
            private static bool isobj21FillDisabled = false;
            private static bool isobj22SelectedIndexDisabled = false;

            private NoteEditOptionsControl_obj1_BindingsTracking bindingsTracking;

            public NoteEditOptionsControl_obj1_Bindings()
            {
                this.bindingsTracking = new NoteEditOptionsControl_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 66 && columnNumber == 13)
                {
                    this.obj11.Click -= obj11Click;
                }
                else if (lineNumber == 74 && columnNumber == 13)
                {
                    this.obj12.Click -= obj12Click;
                }
                else if (lineNumber == 82 && columnNumber == 13)
                {
                    this.obj13.Click -= obj13Click;
                }
                else if (lineNumber == 91 && columnNumber == 13)
                {
                    this.obj14.Click -= obj14Click;
                }
                else if (lineNumber == 100 && columnNumber == 13)
                {
                    this.obj15.Click -= obj15Click;
                }
                else if (lineNumber == 109 && columnNumber == 13)
                {
                    this.obj16.Click -= obj16Click;
                }
                else if (lineNumber == 171 && columnNumber == 13)
                {
                    isobj18VisibilityDisabled = true;
                }
                else if (lineNumber == 166 && columnNumber == 13)
                {
                    this.obj18.Click -= obj18Click;
                }
                else if (lineNumber == 205 && columnNumber == 13)
                {
                    isobj19VisibilityDisabled = true;
                }
                else if (lineNumber == 199 && columnNumber == 13)
                {
                    this.obj19.Click -= obj19Click;
                }
                else if (lineNumber == 185 && columnNumber == 29)
                {
                    isobj20ItemsSourceDisabled = true;
                }
                else if (lineNumber == 129 && columnNumber == 21)
                {
                    isobj21FillDisabled = true;
                }
                else if (lineNumber == 138 && columnNumber == 25)
                {
                    isobj22SelectedIndexDisabled = true;
                }
                else if (lineNumber == 139 && columnNumber == 25)
                {
                    this.obj22.SelectionChanged -= obj22SelectionChanged;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11: // View\UserControl\NoteEditOptionsControl.xaml line 64
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj11Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontBackgroundClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj11Click;
                        break;
                    case 12: // View\UserControl\NoteEditOptionsControl.xaml line 71
                        this.obj12 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj12Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontIncreaseClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj12Click;
                        break;
                    case 13: // View\UserControl\NoteEditOptionsControl.xaml line 79
                        this.obj13 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj13Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontDecreaseClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj13Click;
                        break;
                    case 14: // View\UserControl\NoteEditOptionsControl.xaml line 88
                        this.obj14 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj14Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.SmallCapsClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj14Click;
                        break;
                    case 15: // View\UserControl\NoteEditOptionsControl.xaml line 97
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj15Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.AllCapsClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj15Click;
                        break;
                    case 16: // View\UserControl\NoteEditOptionsControl.xaml line 106
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj16Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.StrikethroughClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj16Click;
                        break;
                    case 18: // View\UserControl\NoteEditOptionsControl.xaml line 163
                        this.obj18 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj18Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.NoteShareButtonClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj18Click;
                        break;
                    case 19: // View\UserControl\NoteEditOptionsControl.xaml line 196
                        this.obj19 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj19Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.NoteDeleteButtonClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj19Click;
                        break;
                    case 20: // View\UserControl\NoteEditOptionsControl.xaml line 175
                        this.obj20 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 21: // View\UserControl\NoteEditOptionsControl.xaml line 126
                        this.obj21 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 22: // View\UserControl\NoteEditOptionsControl.xaml line 135
                        this.obj22 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        this.obj22SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ColorOptionsSelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListBox)target).SelectionChanged += obj22SelectionChanged;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // INoteEditOptionsControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.NoteEditOptionsControl)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.NoteEditOptionsControl obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NoteShareButtonVisibility(obj.NoteShareButtonVisibility, phase);
                        this.Update_NoteDeleteButtonVisibility(obj.NoteDeleteButtonVisibility, phase);
                        this.Update_UsersToShare(obj.UsersToShare, phase);
                        this.Update_NoteColorForeground(obj.NoteColorForeground, phase);
                        this.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, phase);
                    }
                }
            }
            private void Update_NoteShareButtonVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 163
                    if (!isobj18VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj18, obj);
                    }
                }
            }
            private void Update_NoteDeleteButtonVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 196
                    if (!isobj19VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj19, obj);
                    }
                }
            }
            private void Update_UsersToShare(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.User> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_UsersToShare(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 175
                    if (!isobj20ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj20, obj, null);
                    }
                }
            }
            private void Update_NoteColorForeground(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 126
                    if (!isobj21FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj21, obj, null);
                    }
                }
            }
            private void Update_ColorOptionsSelectedIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\UserControl\NoteEditOptionsControl.xaml line 135
                    if (!isobj22SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj22, obj);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class NoteEditOptionsControl_obj1_BindingsTracking
            {
                private global::System.WeakReference<NoteEditOptionsControl_obj1_Bindings> weakRefToBindingObj; 

                public NoteEditOptionsControl_obj1_BindingsTracking(NoteEditOptionsControl_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<NoteEditOptionsControl_obj1_Bindings>(obj);
                }

                public NoteEditOptionsControl_obj1_Bindings TryGetBindingObject()
                {
                    NoteEditOptionsControl_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_UsersToShare(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NoteEditOptionsControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::YourNoteUWP.NoteEditOptionsControl obj = sender as global::YourNoteUWP.NoteEditOptionsControl;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_NoteShareButtonVisibility(obj.NoteShareButtonVisibility, DATA_CHANGED);
                                bindings.Update_NoteDeleteButtonVisibility(obj.NoteDeleteButtonVisibility, DATA_CHANGED);
                                bindings.Update_UsersToShare(obj.UsersToShare, DATA_CHANGED);
                                bindings.Update_NoteColorForeground(obj.NoteColorForeground, DATA_CHANGED);
                                bindings.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "NoteShareButtonVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteShareButtonVisibility(obj.NoteShareButtonVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteDeleteButtonVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteDeleteButtonVisibility(obj.NoteDeleteButtonVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "UsersToShare":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_UsersToShare(obj.UsersToShare, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteColorForeground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteColorForeground(obj.NoteColorForeground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ColorOptionsSelectedIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::YourNoteUWP.NoteEditOptionsControl obj)
                {
                    NoteEditOptionsControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_UsersToShare(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NoteEditOptionsControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.User> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.User>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_UsersToShare(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    NoteEditOptionsControl_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.User> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.User>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.User> cache_UsersToShare = null;
                public void UpdateChildListeners_UsersToShare(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.User> obj)
                {
                    if (obj != cache_UsersToShare)
                    {
                        if (cache_UsersToShare != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_UsersToShare).PropertyChanged -= PropertyChanged_UsersToShare;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_UsersToShare).CollectionChanged -= CollectionChanged_UsersToShare;
                            cache_UsersToShare = null;
                        }
                        if (obj != null)
                        {
                            cache_UsersToShare = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_UsersToShare;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_UsersToShare;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 10: // View\UserControl\NoteEditOptionsControl.xaml line 56
                {
                    this.Options = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 11: // View\UserControl\NoteEditOptionsControl.xaml line 64
                {
                    this.FontBackground = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 12: // View\UserControl\NoteEditOptionsControl.xaml line 71
                {
                    this.FontIncrease = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 13: // View\UserControl\NoteEditOptionsControl.xaml line 79
                {
                    this.FontDecrease = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 14: // View\UserControl\NoteEditOptionsControl.xaml line 88
                {
                    this.SmallCaps = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 15: // View\UserControl\NoteEditOptionsControl.xaml line 97
                {
                    this.AllCaps = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 16: // View\UserControl\NoteEditOptionsControl.xaml line 106
                {
                    this.Strikethrough = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 17: // View\UserControl\NoteEditOptionsControl.xaml line 117
                {
                    this.NoteColor = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 18: // View\UserControl\NoteEditOptionsControl.xaml line 163
                {
                    this.NoteShareButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 19: // View\UserControl\NoteEditOptionsControl.xaml line 196
                {
                    this.NoteDeleteButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 20: // View\UserControl\NoteEditOptionsControl.xaml line 175
                {
                    this.UsersToShareView = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.UsersToShareView).ItemClick += this.UsersToShareView_ItemClick;
                }
                break;
            case 22: // View\UserControl\NoteEditOptionsControl.xaml line 135
                {
                    this.ColorOptions = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\UserControl\NoteEditOptionsControl.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    NoteEditOptionsControl_obj1_Bindings bindings = new NoteEditOptionsControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // View\UserControl\NoteEditOptionsControl.xaml line 34
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    NoteEditOptionsControl_obj3_Bindings bindings = new NoteEditOptionsControl_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            case 7: // View\UserControl\NoteEditOptionsControl.xaml line 16
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element7 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    NoteEditOptionsControl_obj7_Bindings bindings = new NoteEditOptionsControl_obj7_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element7.DataContext);
                    element7.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element7, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element7, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

