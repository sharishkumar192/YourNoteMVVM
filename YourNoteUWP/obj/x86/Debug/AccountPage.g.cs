#pragma checksum "D:\YourNoteUWP\YourNoteUWP\AccountPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "7268307503ECD280A803AB2D604C2574556CE26A7114F198FEBE68B8C78C8012"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YourNoteUWP
{
    partial class AccountPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(global::Windows.UI.Xaml.Controls.Primitives.Popup obj, global::System.Boolean value)
            {
                obj.IsOpen = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Height(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Foreground(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem obj, global::System.Boolean value)
            {
                obj.IsSelected = value;
            }
            public static void Set_Windows_UI_Xaml_Shapes_Shape_Fill(global::Windows.UI.Xaml.Shapes.Shape obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Fill = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj15_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj15;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj16;
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj16FillDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;

            private AccountPage_obj15_BindingsTracking bindingsTracking;

            public AccountPage_obj15_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj15_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 111 && columnNumber == 21)
                {
                    isobj16FillDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 25)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 124 && columnNumber == 25)
                {
                    isobj18TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 15: // AccountPage.xaml line 104
                        this.obj15 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 16: // AccountPage.xaml line 108
                        this.obj16 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 17: // AccountPage.xaml line 113
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 18: // AccountPage.xaml line 120
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj15.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::YourNoteUWP.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::YourNoteUWP.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::YourNoteUWP.AccountPage.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 108
                    if (!isobj16FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj16, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                        this.Update_content(obj.content, phase);
                    }
                }
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj16FillDisabled)
                    {
                        this.PendingFunctionBindings["YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 113
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_content(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 120
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj15_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj15_Bindings> weakRefToBindingObj; 

                public AccountPage_obj15_BindingsTracking(AccountPage_obj15_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj15_Bindings>(obj);
                }

                public AccountPage_obj15_Bindings TryGetBindingObject()
                {
                    AccountPage_obj15_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj20_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj20;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj21;
            private global::Windows.UI.Xaml.Controls.TextBlock obj22;
            private global::Windows.UI.Xaml.Controls.TextBlock obj23;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj21FillDisabled = false;
            private static bool isobj22TextDisabled = false;
            private static bool isobj23TextDisabled = false;

            private AccountPage_obj20_BindingsTracking bindingsTracking;

            public AccountPage_obj20_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj20_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 84 && columnNumber == 21)
                {
                    isobj21FillDisabled = true;
                }
                else if (lineNumber == 91 && columnNumber == 25)
                {
                    isobj22TextDisabled = true;
                }
                else if (lineNumber == 97 && columnNumber == 25)
                {
                    isobj23TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 20: // AccountPage.xaml line 75
                        this.obj20 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 21: // AccountPage.xaml line 81
                        this.obj21 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 22: // AccountPage.xaml line 86
                        this.obj22 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 23: // AccountPage.xaml line 93
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj20.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::YourNoteUWP.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::YourNoteUWP.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::YourNoteUWP.AccountPage.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 81
                    if (!isobj21FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj21, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                        this.Update_content(obj.content, phase);
                    }
                }
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj21FillDisabled)
                    {
                        this.PendingFunctionBindings["YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 86
                    if (!isobj22TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj22, obj, null);
                    }
                }
            }
            private void Update_content(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 93
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj23, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj20_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj20_Bindings> weakRefToBindingObj; 

                public AccountPage_obj20_BindingsTracking(AccountPage_obj20_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj20_Bindings>(obj);
                }

                public AccountPage_obj20_Bindings TryGetBindingObject()
                {
                    AccountPage_obj20_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj25_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj25;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj26;
            private global::Windows.UI.Xaml.Controls.TextBlock obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj28;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj26FillDisabled = false;
            private static bool isobj27TextDisabled = false;
            private static bool isobj28TextDisabled = false;

            private AccountPage_obj25_BindingsTracking bindingsTracking;

            public AccountPage_obj25_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj25_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 56 && columnNumber == 21)
                {
                    isobj26FillDisabled = true;
                }
                else if (lineNumber == 63 && columnNumber == 25)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 25)
                {
                    isobj28TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 25: // AccountPage.xaml line 49
                        this.obj25 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 26: // AccountPage.xaml line 53
                        this.obj26 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 27: // AccountPage.xaml line 58
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 28: // AccountPage.xaml line 65
                        this.obj28 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj25.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::YourNoteUWP.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::YourNoteUWP.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::YourNoteUWP.AccountPage.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 53
                    if (!isobj26FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj26, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                        this.Update_content(obj.content, phase);
                    }
                }
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj26FillDisabled)
                    {
                        this.PendingFunctionBindings["YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 58
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj27, obj, null);
                    }
                }
            }
            private void Update_content(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 65
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj28, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj25_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj25_Bindings> weakRefToBindingObj; 

                public AccountPage_obj25_BindingsTracking(AccountPage_obj25_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj25_Bindings>(obj);
                }

                public AccountPage_obj25_Bindings TryGetBindingObject()
                {
                    AccountPage_obj25_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj30_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj30;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj31;
            private global::Windows.UI.Xaml.Controls.TextBlock obj32;
            private global::Windows.UI.Xaml.Controls.TextBlock obj33;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj31FillDisabled = false;
            private static bool isobj32TextDisabled = false;
            private static bool isobj33TextDisabled = false;

            private AccountPage_obj30_BindingsTracking bindingsTracking;

            public AccountPage_obj30_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj30_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 29 && columnNumber == 21)
                {
                    isobj31FillDisabled = true;
                }
                else if (lineNumber == 36 && columnNumber == 25)
                {
                    isobj32TextDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 25)
                {
                    isobj33TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 30: // AccountPage.xaml line 20
                        this.obj30 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 31: // AccountPage.xaml line 26
                        this.obj31 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 32: // AccountPage.xaml line 31
                        this.obj32 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 33: // AccountPage.xaml line 38
                        this.obj33 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj30.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::YourNoteUWP.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::YourNoteUWP.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::YourNoteUWP.AccountPage.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 26
                    if (!isobj31FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj31, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                        this.Update_content(obj.content, phase);
                    }
                }
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj31FillDisabled)
                    {
                        this.PendingFunctionBindings["YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 31
                    if (!isobj32TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj32, obj, null);
                    }
                }
            }
            private void Update_content(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 38
                    if (!isobj33TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj33, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj30_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj30_Bindings> weakRefToBindingObj; 

                public AccountPage_obj30_BindingsTracking(AccountPage_obj30_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj30_Bindings>(obj);
                }

                public AccountPage_obj30_Bindings TryGetBindingObject()
                {
                    AccountPage_obj30_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.AccountPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj34;
            private global::Windows.UI.Xaml.Controls.Primitives.Popup obj35;
            private global::YourNoteUWP.NoteContent obj36;
            private global::Windows.UI.Xaml.Controls.TextBlock obj39;
            private global::Windows.UI.Xaml.Controls.Grid obj40;
            private global::Windows.UI.Xaml.Controls.RichEditBox obj41;
            private global::Windows.UI.Xaml.Controls.RichEditBox obj42;
            private global::Windows.UI.Xaml.Controls.Grid obj43;
            private global::Windows.UI.Xaml.Controls.Button obj45;
            private global::Windows.UI.Xaml.Controls.Button obj46;
            private global::Windows.UI.Xaml.Controls.Button obj47;
            private global::Windows.UI.Xaml.Controls.Button obj48;
            private global::Windows.UI.Xaml.Controls.Button obj49;
            private global::Windows.UI.Xaml.Controls.Button obj50;
            private global::Windows.UI.Xaml.Controls.Button obj51;
            private global::Windows.UI.Xaml.Controls.Button obj52;
            private global::Windows.UI.Xaml.Controls.ListBox obj53;
            private global::Windows.UI.Xaml.Controls.ListBox obj54;
            private global::Windows.UI.Xaml.Controls.StackPanel obj55;
            private global::Windows.UI.Xaml.Controls.Button obj56;
            private global::Windows.UI.Xaml.Controls.TextBox obj57;
            private global::Windows.UI.Xaml.Controls.Primitives.Popup obj58;
            private global::Windows.UI.Xaml.Controls.ListView obj60;
            private global::Windows.UI.Xaml.Controls.ListBox obj61;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj62;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj63;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj64;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj34ItemClick;
            private global::Windows.UI.Xaml.RoutedEventHandler obj41TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj42GotFocus;
            private global::Windows.UI.Xaml.RoutedEventHandler obj42TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj45Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj46Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj47Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj48Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj49Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj50Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj51Click;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj53SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj54SelectionChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj55LostFocus;
            private global::Windows.UI.Xaml.RoutedEventHandler obj56Click;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj57TextChanged;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj60ItemClick;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj61SelectionChanged;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj34ItemsSourceDisabled = false;
            private static bool isobj35IsOpenDisabled = false;
            private static bool isobj36WidthDisabled = false;
            private static bool isobj36HeightDisabled = false;
            private static bool isobj39TextDisabled = false;
            private static bool isobj40VisibilityDisabled = false;
            private static bool isobj41VisibilityDisabled = false;
            private static bool isobj43VisibilityDisabled = false;
            private static bool isobj45ContentDisabled = false;
            private static bool isobj52ForegroundDisabled = false;
            private static bool isobj53SelectedIndexDisabled = false;
            private static bool isobj54SelectedIndexDisabled = false;
            private static bool isobj57TextDisabled = false;
            private static bool isobj58IsOpenDisabled = false;
            private static bool isobj60ItemsSourceDisabled = false;
            private static bool isobj60VisibilityDisabled = false;
            private static bool isobj61ItemsSourceDisabled = false;
            private static bool isobj61VisibilityDisabled = false;
            private static bool isobj62IsSelectedDisabled = false;
            private static bool isobj63IsSelectedDisabled = false;
            private static bool isobj64IsSelectedDisabled = false;

            private AccountPage_obj1_BindingsTracking bindingsTracking;

            public AccountPage_obj1_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 678 && columnNumber == 13)
                {
                    isobj34ItemsSourceDisabled = true;
                }
                else if (lineNumber == 676 && columnNumber == 13)
                {
                    this.obj34.ItemClick -= obj34ItemClick;
                }
                else if (lineNumber == 689 && columnNumber == 13)
                {
                    isobj35IsOpenDisabled = true;
                }
                else if (lineNumber == 694 && columnNumber == 17)
                {
                    isobj36WidthDisabled = true;
                }
                else if (lineNumber == 695 && columnNumber == 17)
                {
                    isobj36HeightDisabled = true;
                }
                else if (lineNumber == 473 && columnNumber == 17)
                {
                    isobj39TextDisabled = true;
                }
                else if (lineNumber == 482 && columnNumber == 17)
                {
                    isobj40VisibilityDisabled = true;
                }
                else if (lineNumber == 500 && columnNumber == 21)
                {
                    isobj41VisibilityDisabled = true;
                }
                else if (lineNumber == 499 && columnNumber == 21)
                {
                    this.obj41.TextChanged -= obj41TextChanged;
                }
                else if (lineNumber == 507 && columnNumber == 21)
                {
                    this.obj42.GotFocus -= obj42GotFocus;
                }
                else if (lineNumber == 510 && columnNumber == 21)
                {
                    this.obj42.TextChanged -= obj42TextChanged;
                }
                else if (lineNumber == 523 && columnNumber == 21)
                {
                    isobj43VisibilityDisabled = true;
                }
                else if (lineNumber == 636 && columnNumber == 25)
                {
                    isobj45ContentDisabled = true;
                }
                else if (lineNumber == 635 && columnNumber == 25)
                {
                    this.obj45.Click -= obj45Click;
                }
                else if (lineNumber == 541 && columnNumber == 29)
                {
                    this.obj46.Click -= obj46Click;
                }
                else if (lineNumber == 549 && columnNumber == 29)
                {
                    this.obj47.Click -= obj47Click;
                }
                else if (lineNumber == 557 && columnNumber == 29)
                {
                    this.obj48.Click -= obj48Click;
                }
                else if (lineNumber == 566 && columnNumber == 29)
                {
                    this.obj49.Click -= obj49Click;
                }
                else if (lineNumber == 575 && columnNumber == 29)
                {
                    this.obj50.Click -= obj50Click;
                }
                else if (lineNumber == 584 && columnNumber == 29)
                {
                    this.obj51.Click -= obj51Click;
                }
                else if (lineNumber == 596 && columnNumber == 29)
                {
                    isobj52ForegroundDisabled = true;
                }
                else if (lineNumber == 604 && columnNumber == 41)
                {
                    isobj53SelectedIndexDisabled = true;
                }
                else if (lineNumber == 605 && columnNumber == 41)
                {
                    this.obj53.SelectionChanged -= obj53SelectionChanged;
                }
                else if (lineNumber == 343 && columnNumber == 17)
                {
                    isobj54SelectedIndexDisabled = true;
                }
                else if (lineNumber == 344 && columnNumber == 17)
                {
                    this.obj54.SelectionChanged -= obj54SelectionChanged;
                }
                else if (lineNumber == 370 && columnNumber == 17)
                {
                    this.obj55.LostFocus -= obj55LostFocus;
                }
                else if (lineNumber == 445 && columnNumber == 17)
                {
                    this.obj56.Click -= obj56Click;
                }
                else if (lineNumber == 381 && columnNumber == 21)
                {
                    isobj57TextDisabled = true;
                }
                else if (lineNumber == 382 && columnNumber == 21)
                {
                    this.obj57.TextChanged -= obj57TextChanged;
                }
                else if (lineNumber == 389 && columnNumber == 21)
                {
                    isobj58IsOpenDisabled = true;
                }
                else if (lineNumber == 424 && columnNumber == 33)
                {
                    isobj60ItemsSourceDisabled = true;
                }
                else if (lineNumber == 425 && columnNumber == 33)
                {
                    isobj60VisibilityDisabled = true;
                }
                else if (lineNumber == 422 && columnNumber == 33)
                {
                    this.obj60.ItemClick -= obj60ItemClick;
                }
                else if (lineNumber == 407 && columnNumber == 37)
                {
                    isobj61ItemsSourceDisabled = true;
                }
                else if (lineNumber == 410 && columnNumber == 37)
                {
                    isobj61VisibilityDisabled = true;
                }
                else if (lineNumber == 408 && columnNumber == 37)
                {
                    this.obj61.SelectionChanged -= obj61SelectionChanged;
                }
                else if (lineNumber == 350 && columnNumber == 21)
                {
                    isobj62IsSelectedDisabled = true;
                }
                else if (lineNumber == 355 && columnNumber == 21)
                {
                    isobj63IsSelectedDisabled = true;
                }
                else if (lineNumber == 360 && columnNumber == 21)
                {
                    isobj64IsSelectedDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 34: // AccountPage.xaml line 670
                        this.obj34 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        this.obj34ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.NotesDataItemClick(p0, p1);
                        };
                        ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target).ItemClick += obj34ItemClick;
                        break;
                    case 35: // AccountPage.xaml line 686
                        this.obj35 = (global::Windows.UI.Xaml.Controls.Primitives.Popup)target;
                        break;
                    case 36: // AccountPage.xaml line 692
                        this.obj36 = (global::YourNoteUWP.NoteContent)target;
                        break;
                    case 39: // AccountPage.xaml line 465
                        this.obj39 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 40: // AccountPage.xaml line 475
                        this.obj40 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 41: // AccountPage.xaml line 490
                        this.obj41 = (global::Windows.UI.Xaml.Controls.RichEditBox)target;
                        this.obj41TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.TitleOfNewNoteTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).TextChanged += obj41TextChanged;
                        break;
                    case 42: // AccountPage.xaml line 503
                        this.obj42 = (global::Windows.UI.Xaml.Controls.RichEditBox)target;
                        this.obj42GotFocus = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ContentOfNewNoteGotFocus();
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).GotFocus += obj42GotFocus;
                        this.obj42TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ContentOfNewNoteTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).TextChanged += obj42TextChanged;
                        break;
                    case 43: // AccountPage.xaml line 519
                        this.obj43 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 45: // AccountPage.xaml line 629
                        this.obj45 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj45Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.CreationButtonClick();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj45Click;
                        break;
                    case 46: // AccountPage.xaml line 539
                        this.obj46 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj46Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontBackgroundClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj46Click;
                        break;
                    case 47: // AccountPage.xaml line 546
                        this.obj47 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj47Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontIncreaseClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj47Click;
                        break;
                    case 48: // AccountPage.xaml line 554
                        this.obj48 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj48Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontDecreaseClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj48Click;
                        break;
                    case 49: // AccountPage.xaml line 563
                        this.obj49 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj49Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.SmallCapsClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj49Click;
                        break;
                    case 50: // AccountPage.xaml line 572
                        this.obj50 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj50Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.AllCapsClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj50Click;
                        break;
                    case 51: // AccountPage.xaml line 581
                        this.obj51 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj51Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.StrikethroughClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj51Click;
                        break;
                    case 52: // AccountPage.xaml line 592
                        this.obj52 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 53: // AccountPage.xaml line 601
                        this.obj53 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        this.obj53SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ColorOptionsSelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListBox)target).SelectionChanged += obj53SelectionChanged;
                        break;
                    case 54: // AccountPage.xaml line 337
                        this.obj54 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        this.obj54SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.MainMenuOptionsSelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListBox)target).SelectionChanged += obj54SelectionChanged;
                        break;
                    case 55: // AccountPage.xaml line 366
                        this.obj55 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        this.obj55LostFocus = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.SearchBoxContainerLostFocus();
                        };
                        ((global::Windows.UI.Xaml.Controls.StackPanel)target).LostFocus += obj55LostFocus;
                        break;
                    case 56: // AccountPage.xaml line 439
                        this.obj56 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj56Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.LogoutContentTapped();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj56Click;
                        break;
                    case 57: // AccountPage.xaml line 374
                        this.obj57 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj57TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.SearchTextBoxTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj57TextChanged;
                        break;
                    case 58: // AccountPage.xaml line 384
                        this.obj58 = (global::Windows.UI.Xaml.Controls.Primitives.Popup)target;
                        break;
                    case 60: // AccountPage.xaml line 417
                        this.obj60 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        this.obj60ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.SuggestionContainerItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListView)target).ItemClick += obj60ItemClick;
                        break;
                    case 61: // AccountPage.xaml line 403
                        this.obj61 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        this.obj61SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.RecentlySearchedSelectionChanged();
                        };
                        ((global::Windows.UI.Xaml.Controls.ListBox)target).SelectionChanged += obj61SelectionChanged;
                        break;
                    case 62: // AccountPage.xaml line 347
                        this.obj62 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_62(this.obj62);
                        break;
                    case 63: // AccountPage.xaml line 352
                        this.obj63 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_63(this.obj63);
                        break;
                    case 64: // AccountPage.xaml line 357
                        this.obj64 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_64(this.obj64);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.AccountPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.AccountPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NotesDataItemSource(obj.NotesDataItemSource, phase);
                        this.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, phase);
                        this.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, phase);
                        this.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, phase);
                        this.Update_TitleText(obj.TitleText, phase);
                        this.Update_NewNoteVisibility(obj.NewNoteVisibility, phase);
                        this.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, phase);
                        this.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, phase);
                        this.Update_CreationButtonContent(obj.CreationButtonContent, phase);
                        this.Update_NoteColorForeground(obj.NoteColorForeground, phase);
                        this.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, phase);
                        this.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, phase);
                        this.Update_SearchTextBoxText(obj.SearchTextBoxText, phase);
                        this.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, phase);
                        this.Update_SuggestionContentItemSource(obj.SuggestionContentItemSource, phase);
                        this.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, phase);
                        this.Update_RecentlySearchedItemSource(obj.RecentlySearchedItemSource, phase);
                        this.Update_RecentlySearchedVisibility(obj.RecentlySearchedVisibility, phase);
                        this.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, phase);
                        this.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, phase);
                        this.Update_AllNotesIsSelected(obj.AllNotesIsSelected, phase);
                    }
                }
            }
            private void Update_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_NotesDataItemSource(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 670
                    if (!isobj34ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj34, obj, null);
                    }
                }
            }
            private void Update_NoteDisplayPopUpIsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 686
                    if (!isobj35IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(this.obj35, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpWidth(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 692
                    if (!isobj36WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj36, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpHeight(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 692
                    if (!isobj36HeightDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Height(this.obj36, obj);
                    }
                }
            }
            private void Update_TitleText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 465
                    if (!isobj39TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj39, obj, null);
                    }
                }
            }
            private void Update_NewNoteVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 475
                    if (!isobj40VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj40, obj);
                    }
                }
            }
            private void Update_TitleOfNewNoteVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 490
                    if (!isobj41VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj41, obj);
                    }
                }
            }
            private void Update_NoteStyleOptionsVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 519
                    if (!isobj43VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj43, obj);
                    }
                }
            }
            private void Update_CreationButtonContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 629
                    if (!isobj45ContentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj45, obj, null);
                    }
                }
            }
            private void Update_NoteColorForeground(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 592
                    if (!isobj52ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj52, obj, null);
                    }
                }
            }
            private void Update_ColorOptionsSelectedIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 601
                    if (!isobj53SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj53, obj);
                    }
                }
            }
            private void Update_MainMenuOptionsSelectedIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 337
                    if (!isobj54SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj54, obj);
                    }
                }
            }
            private void Update_SearchTextBoxText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 374
                    if (!isobj57TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj57, obj, null);
                    }
                }
            }
            private void Update_SearchPopupIsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 384
                    if (!isobj58IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(this.obj58, obj);
                    }
                }
            }
            private void Update_SuggestionContentItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SuggestionContentItemSource(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 417
                    if (!isobj60ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj60, obj, null);
                    }
                }
            }
            private void Update_SuggestionContentVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 417
                    if (!isobj60VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj60, obj);
                    }
                }
            }
            private void Update_RecentlySearchedItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_RecentlySearchedItemSource(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 403
                    if (!isobj61ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj61, obj, null);
                    }
                }
            }
            private void Update_RecentlySearchedVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 403
                    if (!isobj61VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj61, obj);
                    }
                }
            }
            private void Update_PersonalNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 347
                    if (!isobj62IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj62, obj);
                    }
                }
            }
            private void Update_SharedNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 352
                    if (!isobj63IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj63, obj);
                    }
                }
            }
            private void Update_AllNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 357
                    if (!isobj64IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj64, obj);
                    }
                }
            }
            private void UpdateTwoWay_62_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.PersonalNotesIsSelected = this.obj62.IsSelected;
                    }
                }
            }
            private void UpdateTwoWay_63_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SharedNotesIsSelected = this.obj63.IsSelected;
                    }
                }
            }
            private void UpdateTwoWay_64_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.AllNotesIsSelected = this.obj64.IsSelected;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj1_Bindings> weakRefToBindingObj; 

                public AccountPage_obj1_BindingsTracking(AccountPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj1_Bindings>(obj);
                }

                public AccountPage_obj1_Bindings TryGetBindingObject()
                {
                    AccountPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_NotesDataItemSource(null);
                    UpdateChildListeners_SuggestionContentItemSource(null);
                    UpdateChildListeners_RecentlySearchedItemSource(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::YourNoteUWP.AccountPage obj = sender as global::YourNoteUWP.AccountPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                                bindings.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                bindings.Update_TitleText(obj.TitleText, DATA_CHANGED);
                                bindings.Update_NewNoteVisibility(obj.NewNoteVisibility, DATA_CHANGED);
                                bindings.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, DATA_CHANGED);
                                bindings.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, DATA_CHANGED);
                                bindings.Update_CreationButtonContent(obj.CreationButtonContent, DATA_CHANGED);
                                bindings.Update_NoteColorForeground(obj.NoteColorForeground, DATA_CHANGED);
                                bindings.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, DATA_CHANGED);
                                bindings.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, DATA_CHANGED);
                                bindings.Update_SearchTextBoxText(obj.SearchTextBoxText, DATA_CHANGED);
                                bindings.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, DATA_CHANGED);
                                bindings.Update_SuggestionContentItemSource(obj.SuggestionContentItemSource, DATA_CHANGED);
                                bindings.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, DATA_CHANGED);
                                bindings.Update_RecentlySearchedItemSource(obj.RecentlySearchedItemSource, DATA_CHANGED);
                                bindings.Update_RecentlySearchedVisibility(obj.RecentlySearchedVisibility, DATA_CHANGED);
                                bindings.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, DATA_CHANGED);
                                bindings.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, DATA_CHANGED);
                                bindings.Update_AllNotesIsSelected(obj.AllNotesIsSelected, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "NotesDataItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteDisplayPopUpIsOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpWidth":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpHeight":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleText(obj.TitleText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NewNoteVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewNoteVisibility(obj.NewNoteVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleOfNewNoteVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteStyleOptionsVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CreationButtonContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CreationButtonContent(obj.CreationButtonContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteColorForeground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteColorForeground(obj.NoteColorForeground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ColorOptionsSelectedIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MainMenuOptionsSelectedIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchTextBoxText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SearchTextBoxText(obj.SearchTextBoxText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchPopupIsOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SuggestionContentItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SuggestionContentItemSource(obj.SuggestionContentItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SuggestionContentVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RecentlySearchedItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_RecentlySearchedItemSource(obj.RecentlySearchedItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RecentlySearchedVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_RecentlySearchedVisibility(obj.RecentlySearchedVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PersonalNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SharedNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AllNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AllNotesIsSelected(obj.AllNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::YourNoteUWP.AccountPage obj)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_NotesDataItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_NotesDataItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> cache_NotesDataItemSource = null;
                public void UpdateChildListeners_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj)
                {
                    if (obj != cache_NotesDataItemSource)
                    {
                        if (cache_NotesDataItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_NotesDataItemSource).PropertyChanged -= PropertyChanged_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_NotesDataItemSource).CollectionChanged -= CollectionChanged_NotesDataItemSource;
                            cache_NotesDataItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_NotesDataItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_NotesDataItemSource;
                        }
                    }
                }
                public void PropertyChanged_SuggestionContentItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_SuggestionContentItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> cache_SuggestionContentItemSource = null;
                public void UpdateChildListeners_SuggestionContentItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj)
                {
                    if (obj != cache_SuggestionContentItemSource)
                    {
                        if (cache_SuggestionContentItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SuggestionContentItemSource).PropertyChanged -= PropertyChanged_SuggestionContentItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_SuggestionContentItemSource).CollectionChanged -= CollectionChanged_SuggestionContentItemSource;
                            cache_SuggestionContentItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_SuggestionContentItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SuggestionContentItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_SuggestionContentItemSource;
                        }
                    }
                }
                public void PropertyChanged_RecentlySearchedItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_RecentlySearchedItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> cache_RecentlySearchedItemSource = null;
                public void UpdateChildListeners_RecentlySearchedItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj)
                {
                    if (obj != cache_RecentlySearchedItemSource)
                    {
                        if (cache_RecentlySearchedItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_RecentlySearchedItemSource).PropertyChanged -= PropertyChanged_RecentlySearchedItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_RecentlySearchedItemSource).CollectionChanged -= CollectionChanged_RecentlySearchedItemSource;
                            cache_RecentlySearchedItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_RecentlySearchedItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_RecentlySearchedItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_RecentlySearchedItemSource;
                        }
                    }
                }
                public void RegisterTwoWayListener_62(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_62_IsSelected();
                        }
                    });
                }
                public void RegisterTwoWayListener_63(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_63_IsSelected();
                        }
                    });
                }
                public void RegisterTwoWayListener_64(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_64_IsSelected();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 34: // AccountPage.xaml line 670
                {
                    this.NotesData = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                }
                break;
            case 35: // AccountPage.xaml line 686
                {
                    this.NoteDisplayPopUp = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 36: // AccountPage.xaml line 692
                {
                    this.NoteContentPopUp = (global::YourNoteUWP.NoteContent)(target);
                }
                break;
            case 39: // AccountPage.xaml line 465
                {
                    this.Title = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 40: // AccountPage.xaml line 475
                {
                    this.NewNote = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 41: // AccountPage.xaml line 490
                {
                    this.TitleOfNewNote = (global::Windows.UI.Xaml.Controls.RichEditBox)(target);
                }
                break;
            case 42: // AccountPage.xaml line 503
                {
                    this.ContentOfNewNote = (global::Windows.UI.Xaml.Controls.RichEditBox)(target);
                }
                break;
            case 43: // AccountPage.xaml line 519
                {
                    this.NoteStyleOptions = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 44: // AccountPage.xaml line 530
                {
                    this.Options = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 45: // AccountPage.xaml line 629
                {
                    this.CreationButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 46: // AccountPage.xaml line 539
                {
                    this.FontBackground = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 47: // AccountPage.xaml line 546
                {
                    this.FontIncrease = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 48: // AccountPage.xaml line 554
                {
                    this.FontDecrease = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 49: // AccountPage.xaml line 563
                {
                    this.SmallCaps = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 50: // AccountPage.xaml line 572
                {
                    this.AllCaps = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 51: // AccountPage.xaml line 581
                {
                    this.Strikethrough = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 52: // AccountPage.xaml line 592
                {
                    this.NoteColor = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 53: // AccountPage.xaml line 601
                {
                    this.ColorOptions = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            case 54: // AccountPage.xaml line 337
                {
                    this.MainMenuOptions = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            case 55: // AccountPage.xaml line 366
                {
                    this.SearchBoxContainer = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 56: // AccountPage.xaml line 439
                {
                    this.Logout = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 57: // AccountPage.xaml line 374
                {
                    this.SearchTextBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 58: // AccountPage.xaml line 384
                {
                    this.SearchPopup = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 59: // AccountPage.xaml line 398
                {
                    this.PopUpContainer = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 60: // AccountPage.xaml line 417
                {
                    this.Suggestion = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 61: // AccountPage.xaml line 403
                {
                    this.RecentlySearched = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            case 62: // AccountPage.xaml line 347
                {
                    this.PersonalNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 63: // AccountPage.xaml line 352
                {
                    this.SharedNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 64: // AccountPage.xaml line 357
                {
                    this.AllNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // AccountPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AccountPage_obj1_Bindings bindings = new AccountPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 15: // AccountPage.xaml line 104
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element15 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AccountPage_obj15_Bindings bindings = new AccountPage_obj15_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element15.DataContext);
                    element15.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element15, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element15, bindings);
                }
                break;
            case 20: // AccountPage.xaml line 75
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element20 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AccountPage_obj20_Bindings bindings = new AccountPage_obj20_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element20.DataContext);
                    element20.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element20, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element20, bindings);
                }
                break;
            case 25: // AccountPage.xaml line 49
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element25 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AccountPage_obj25_Bindings bindings = new AccountPage_obj25_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element25.DataContext);
                    element25.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element25, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element25, bindings);
                }
                break;
            case 30: // AccountPage.xaml line 20
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element30 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AccountPage_obj30_Bindings bindings = new AccountPage_obj30_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element30.DataContext);
                    element30.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element30, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element30, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

