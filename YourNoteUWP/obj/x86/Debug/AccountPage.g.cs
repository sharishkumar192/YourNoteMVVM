#pragma checksum "D:\YourNoteUWP\YourNoteUWP\AccountPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "37152F6877C77BA133C67D579ED365A8822D4A9862565023F5A22054B9789156"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YourNoteUWP
{
    partial class AccountPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(global::Windows.UI.Xaml.Controls.Primitives.Popup obj, global::System.Boolean value)
            {
                obj.IsOpen = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Height(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem obj, global::System.Boolean value)
            {
                obj.IsSelected = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;

            public AccountPage_obj3_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 51 && columnNumber == 21)
                {
                    isobj4TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // AccountPage.xaml line 42
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 4: // AccountPage.xaml line 47
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_title(obj.title, phase);
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 47
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj6_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7TextDisabled = false;

            public AccountPage_obj6_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 34 && columnNumber == 21)
                {
                    isobj7TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // AccountPage.xaml line 26
                        this.obj6 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 7: // AccountPage.xaml line 31
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj6.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_title(obj.title, phase);
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 31
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.AccountPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.NavigationView obj8;
            private global::Windows.UI.Xaml.Controls.Primitives.Popup obj9;
            private global::YourNoteUWP.NoteContent obj10;
            private global::Windows.UI.Xaml.Controls.NavigationViewItem obj11;
            private global::Windows.UI.Xaml.Controls.NavigationViewItem obj12;
            private global::Windows.UI.Xaml.Controls.NavigationViewItem obj13;
            private global::Windows.UI.Xaml.Controls.NavigationViewItem obj14;
            private global::Windows.UI.Xaml.Controls.GridView obj15;

            // Fields for each event bindings event handler.
            private global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.NavigationView, global::Windows.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs> obj8SelectionChanged;
            private global::Windows.UI.Xaml.Input.TappedEventHandler obj14Tapped;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj15ItemClick;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj9IsOpenDisabled = false;
            private static bool isobj10WidthDisabled = false;
            private static bool isobj10HeightDisabled = false;
            private static bool isobj11IsSelectedDisabled = false;
            private static bool isobj12IsSelectedDisabled = false;
            private static bool isobj13IsSelectedDisabled = false;
            private static bool isobj15ItemsSourceDisabled = false;

            private AccountPage_obj1_BindingsTracking bindingsTracking;

            public AccountPage_obj1_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 94 && columnNumber == 13)
                {
                    this.obj8.SelectionChanged -= obj8SelectionChanged;
                }
                else if (lineNumber == 183 && columnNumber == 13)
                {
                    isobj9IsOpenDisabled = true;
                }
                else if (lineNumber == 186 && columnNumber == 17)
                {
                    isobj10WidthDisabled = true;
                }
                else if (lineNumber == 187 && columnNumber == 17)
                {
                    isobj10HeightDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 21)
                {
                    isobj11IsSelectedDisabled = true;
                }
                else if (lineNumber == 116 && columnNumber == 21)
                {
                    isobj12IsSelectedDisabled = true;
                }
                else if (lineNumber == 126 && columnNumber == 21)
                {
                    isobj13IsSelectedDisabled = true;
                }
                else if (lineNumber == 141 && columnNumber == 21)
                {
                    this.obj14.Tapped -= obj14Tapped;
                }
                else if (lineNumber == 164 && columnNumber == 21)
                {
                    isobj15ItemsSourceDisabled = true;
                }
                else if (lineNumber == 162 && columnNumber == 21)
                {
                    this.obj15.ItemClick -= obj15ItemClick;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // AccountPage.xaml line 85
                        this.obj8 = (global::Windows.UI.Xaml.Controls.NavigationView)target;
                        this.obj8SelectionChanged = (global::Windows.UI.Xaml.Controls.NavigationView p0, global::Windows.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot._accountPageViewModel.NavigationSelectionChanged();
                        };
                        ((global::Windows.UI.Xaml.Controls.NavigationView)target).SelectionChanged += obj8SelectionChanged;
                        break;
                    case 9: // AccountPage.xaml line 180
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Primitives.Popup)target;
                        break;
                    case 10: // AccountPage.xaml line 184
                        this.obj10 = (global::YourNoteUWP.NoteContent)target;
                        break;
                    case 11: // AccountPage.xaml line 102
                        this.obj11 = (global::Windows.UI.Xaml.Controls.NavigationViewItem)target;
                        break;
                    case 12: // AccountPage.xaml line 113
                        this.obj12 = (global::Windows.UI.Xaml.Controls.NavigationViewItem)target;
                        break;
                    case 13: // AccountPage.xaml line 123
                        this.obj13 = (global::Windows.UI.Xaml.Controls.NavigationViewItem)target;
                        break;
                    case 14: // AccountPage.xaml line 136
                        this.obj14 = (global::Windows.UI.Xaml.Controls.NavigationViewItem)target;
                        this.obj14Tapped = (global::System.Object p0, global::Windows.UI.Xaml.Input.TappedRoutedEventArgs p1) =>
                        {
                            this.dataRoot._accountPageViewModel.LogoutContentTapped();
                        };
                        ((global::Windows.UI.Xaml.Controls.NavigationViewItem)target).Tapped += obj14Tapped;
                        break;
                    case 15: // AccountPage.xaml line 157
                        this.obj15 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj15ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot._accountPageViewModel.NotesDataItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj15ItemClick;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.AccountPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.AccountPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__accountPageViewModel(obj._accountPageViewModel, phase);
                    }
                }
            }
            private void Update__accountPageViewModel(global::YourNoteUWP.ViewModels.AccountPageViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__accountPageViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update__accountPageViewModel_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, phase);
                        this.Update__accountPageViewModel_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, phase);
                        this.Update__accountPageViewModel_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, phase);
                        this.Update__accountPageViewModel_PersonalContentIsSelected(obj.PersonalContentIsSelected, phase);
                        this.Update__accountPageViewModel_SharedContentIsSelected(obj.SharedContentIsSelected, phase);
                        this.Update__accountPageViewModel_NoteCreationIsSelected(obj.NoteCreationIsSelected, phase);
                        this.Update__accountPageViewModel_NotesDataItemSource(obj.NotesDataItemSource, phase);
                    }
                }
            }
            private void Update__accountPageViewModel_NoteDisplayPopUpIsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 180
                    if (!isobj9IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(this.obj9, obj);
                    }
                }
            }
            private void Update__accountPageViewModel_NoteContentPopUpWidth(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 184
                    if (!isobj10WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj10, obj);
                    }
                }
            }
            private void Update__accountPageViewModel_NoteContentPopUpHeight(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 184
                    if (!isobj10HeightDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Height(this.obj10, obj);
                    }
                }
            }
            private void Update__accountPageViewModel_PersonalContentIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 102
                    if (!isobj11IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj11, obj);
                    }
                }
            }
            private void Update__accountPageViewModel_SharedContentIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 113
                    if (!isobj12IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj12, obj);
                    }
                }
            }
            private void Update__accountPageViewModel_NoteCreationIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 123
                    if (!isobj13IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj13, obj);
                    }
                }
            }
            private void Update__accountPageViewModel_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners__accountPageViewModel_NotesDataItemSource(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 157
                    if (!isobj15ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj15, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj1_Bindings> weakRefToBindingObj; 

                public AccountPage_obj1_BindingsTracking(AccountPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj1_Bindings>(obj);
                }

                public AccountPage_obj1_Bindings TryGetBindingObject()
                {
                    AccountPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners__accountPageViewModel(null);
                    UpdateChildListeners__accountPageViewModel_NotesDataItemSource(null);
                }

                public void PropertyChanged__accountPageViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::YourNoteUWP.ViewModels.AccountPageViewModel obj = sender as global::YourNoteUWP.ViewModels.AccountPageViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update__accountPageViewModel_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                bindings.Update__accountPageViewModel_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                bindings.Update__accountPageViewModel_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                bindings.Update__accountPageViewModel_PersonalContentIsSelected(obj.PersonalContentIsSelected, DATA_CHANGED);
                                bindings.Update__accountPageViewModel_SharedContentIsSelected(obj.SharedContentIsSelected, DATA_CHANGED);
                                bindings.Update__accountPageViewModel_NoteCreationIsSelected(obj.NoteCreationIsSelected, DATA_CHANGED);
                                bindings.Update__accountPageViewModel_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "NoteDisplayPopUpIsOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__accountPageViewModel_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpWidth":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__accountPageViewModel_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpHeight":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__accountPageViewModel_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PersonalContentIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__accountPageViewModel_PersonalContentIsSelected(obj.PersonalContentIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SharedContentIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__accountPageViewModel_SharedContentIsSelected(obj.SharedContentIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteCreationIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__accountPageViewModel_NoteCreationIsSelected(obj.NoteCreationIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NotesDataItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update__accountPageViewModel_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::YourNoteUWP.ViewModels.AccountPageViewModel cache__accountPageViewModel = null;
                public void UpdateChildListeners__accountPageViewModel(global::YourNoteUWP.ViewModels.AccountPageViewModel obj)
                {
                    if (obj != cache__accountPageViewModel)
                    {
                        if (cache__accountPageViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__accountPageViewModel).PropertyChanged -= PropertyChanged__accountPageViewModel;
                            cache__accountPageViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache__accountPageViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__accountPageViewModel;
                        }
                    }
                }
                public void PropertyChanged__accountPageViewModel_NotesDataItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged__accountPageViewModel_NotesDataItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> cache__accountPageViewModel_NotesDataItemSource = null;
                public void UpdateChildListeners__accountPageViewModel_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj)
                {
                    if (obj != cache__accountPageViewModel_NotesDataItemSource)
                    {
                        if (cache__accountPageViewModel_NotesDataItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache__accountPageViewModel_NotesDataItemSource).PropertyChanged -= PropertyChanged__accountPageViewModel_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache__accountPageViewModel_NotesDataItemSource).CollectionChanged -= CollectionChanged__accountPageViewModel_NotesDataItemSource;
                            cache__accountPageViewModel_NotesDataItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache__accountPageViewModel_NotesDataItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged__accountPageViewModel_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged__accountPageViewModel_NotesDataItemSource;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 8: // AccountPage.xaml line 85
                {
                    this.Navigation = (global::Windows.UI.Xaml.Controls.NavigationView)(target);
                }
                break;
            case 9: // AccountPage.xaml line 180
                {
                    this.NoteDisplayPopUp = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 10: // AccountPage.xaml line 184
                {
                    this.NoteContentPopUp = (global::YourNoteUWP.NoteContent)(target);
                }
                break;
            case 11: // AccountPage.xaml line 102
                {
                    this.PersonalContent = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 12: // AccountPage.xaml line 113
                {
                    this.SharedContent = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 13: // AccountPage.xaml line 123
                {
                    this.NoteCreation = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 14: // AccountPage.xaml line 136
                {
                    this.LogoutContent = (global::Windows.UI.Xaml.Controls.NavigationViewItem)(target);
                }
                break;
            case 15: // AccountPage.xaml line 157
                {
                    this.NotesData = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 18: // AccountPage.xaml line 68
                {
                    this.UserImage = (global::Windows.UI.Xaml.Controls.Image)(target);
                    ((global::Windows.UI.Xaml.Controls.Image)this.UserImage).PointerEntered += this.userImage_PointerEntered;
                    ((global::Windows.UI.Xaml.Controls.Image)this.UserImage).PointerExited += this.userImage_PointerExited;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // AccountPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AccountPage_obj1_Bindings bindings = new AccountPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // AccountPage.xaml line 42
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AccountPage_obj3_Bindings bindings = new AccountPage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            case 6: // AccountPage.xaml line 26
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element6 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AccountPage_obj6_Bindings bindings = new AccountPage_obj6_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element6.DataContext);
                    element6.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element6, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element6, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

