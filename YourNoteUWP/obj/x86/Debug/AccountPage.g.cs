#pragma checksum "D:\YourNoteUWP\YourNoteUWP\AccountPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "B8B9F1D65208A75DCDF45652CE92205A45C3E718272701245F4C047148BAD702"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YourNoteUWP
{
    partial class AccountPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(global::Windows.UI.Xaml.Controls.Primitives.Popup obj, global::System.Boolean value)
            {
                obj.IsOpen = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Height(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Foreground(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem obj, global::System.Boolean value)
            {
                obj.IsSelected = value;
            }
            public static void Set_Windows_UI_Xaml_Shapes_Shape_Fill(global::Windows.UI.Xaml.Shapes.Shape obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Fill = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj15_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj15;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj16;
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj16FillDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;

            private AccountPage_obj15_BindingsTracking bindingsTracking;

            public AccountPage_obj15_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj15_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 55 && columnNumber == 21)
                {
                    isobj16FillDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 25)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 25)
                {
                    isobj18TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 15: // AccountPage.xaml line 48
                        this.obj15 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 16: // AccountPage.xaml line 52
                        this.obj16 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 17: // AccountPage.xaml line 57
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 18: // AccountPage.xaml line 64
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj15.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::YourNoteUWP.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::YourNoteUWP.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::YourNoteUWP.AccountPage.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 52
                    if (!isobj16FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj16, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                        this.Update_content(obj.content, phase);
                    }
                }
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj16FillDisabled)
                    {
                        this.PendingFunctionBindings["YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 57
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_content(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 64
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj15_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj15_Bindings> weakRefToBindingObj; 

                public AccountPage_obj15_BindingsTracking(AccountPage_obj15_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj15_Bindings>(obj);
                }

                public AccountPage_obj15_Bindings TryGetBindingObject()
                {
                    AccountPage_obj15_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj20_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.Models.Note dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj20;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj21;
            private global::Windows.UI.Xaml.Controls.TextBlock obj22;
            private global::Windows.UI.Xaml.Controls.TextBlock obj23;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj21FillDisabled = false;
            private static bool isobj22TextDisabled = false;
            private static bool isobj23TextDisabled = false;

            private AccountPage_obj20_BindingsTracking bindingsTracking;

            public AccountPage_obj20_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj20_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 28 && columnNumber == 21)
                {
                    isobj21FillDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 25)
                {
                    isobj22TextDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 25)
                {
                    isobj23TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 20: // AccountPage.xaml line 19
                        this.obj20 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 21: // AccountPage.xaml line 25
                        this.obj21 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 22: // AccountPage.xaml line 30
                        this.obj22 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 23: // AccountPage.xaml line 37
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj20.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::YourNoteUWP.Models.Note) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.Models.Note)newDataRoot;
                    return true;
                }
                return false;
            }

            private bool TryGet_noteColor(out global::System.Int64 val)
            {
                global::YourNoteUWP.Models.Note obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.noteColor;
                    return true;
                }
                else
                {
                    val = default(global::System.Int64);
                    return false;
                }
            }

            private bool TryGet_(out global::YourNoteUWP.Models.Note val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                global::System.Int64 p0;
                if (!TryGet_noteColor(out p0)) { return; }
                global::Windows.UI.Xaml.Media.SolidColorBrush result = global::YourNoteUWP.AccountPage.GetSolidColorBrush(p0);
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 25
                    if (!isobj21FillDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj21, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.Models.Note obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_noteColor(obj.noteColor, phase);
                        this.Update_title(obj.title, phase);
                        this.Update_content(obj.content, phase);
                    }
                }
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_noteColor(global::System.Int64 obj, int phase)
            {
                this.Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(phase);
            }
            private void Update_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj21FillDisabled)
                    {
                        this.PendingFunctionBindings["YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749"] = new InvokeFunctionDelegate(this.Invoke_YourNoteUWP_AccountPage_M_GetSolidColorBrush_3154740749); 
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 30
                    if (!isobj22TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj22, obj, null);
                    }
                }
            }
            private void Update_content(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // AccountPage.xaml line 37
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj23, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj20_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj20_Bindings> weakRefToBindingObj; 

                public AccountPage_obj20_BindingsTracking(AccountPage_obj20_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj20_Bindings>(obj);
                }

                public AccountPage_obj20_Bindings TryGetBindingObject()
                {
                    AccountPage_obj20_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                }

            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountPage_Bindings
        {
            private global::YourNoteUWP.AccountPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.GridView obj24;
            private global::Windows.UI.Xaml.Controls.Primitives.Popup obj25;
            private global::YourNoteUWP.NoteContent obj26;
            private global::Windows.UI.Xaml.Controls.TextBlock obj29;
            private global::Windows.UI.Xaml.Controls.Grid obj30;
            private global::Windows.UI.Xaml.Controls.RichEditBox obj31;
            private global::Windows.UI.Xaml.Controls.RichEditBox obj32;
            private global::Windows.UI.Xaml.Controls.Grid obj33;
            private global::Windows.UI.Xaml.Controls.Button obj35;
            private global::Windows.UI.Xaml.Controls.Button obj36;
            private global::Windows.UI.Xaml.Controls.Button obj37;
            private global::Windows.UI.Xaml.Controls.Button obj38;
            private global::Windows.UI.Xaml.Controls.Button obj39;
            private global::Windows.UI.Xaml.Controls.Button obj40;
            private global::Windows.UI.Xaml.Controls.Button obj41;
            private global::Windows.UI.Xaml.Controls.Button obj42;
            private global::Windows.UI.Xaml.Controls.ListBox obj43;
            private global::Windows.UI.Xaml.Controls.ListBox obj44;
            private global::Windows.UI.Xaml.Controls.StackPanel obj45;
            private global::Windows.UI.Xaml.Controls.Button obj46;
            private global::Windows.UI.Xaml.Controls.TextBox obj47;
            private global::Windows.UI.Xaml.Controls.Primitives.Popup obj48;
            private global::Windows.UI.Xaml.Controls.ListView obj50;
            private global::Windows.UI.Xaml.Controls.ListView obj51;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj52;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj53;
            private global::Windows.UI.Xaml.Controls.ListBoxItem obj54;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj24ItemClick;
            private global::System.EventHandler<global::System.Object> obj25Closed;
            private global::System.EventHandler<global::System.Object> obj25Opened;
            private global::Windows.UI.Xaml.RoutedEventHandler obj31TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj32GotFocus;
            private global::Windows.UI.Xaml.RoutedEventHandler obj32TextChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj35Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj36Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj37Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj38Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj39Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj40Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj41Click;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj43SelectionChanged;
            private global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler obj44SelectionChanged;
            private global::Windows.UI.Xaml.RoutedEventHandler obj45LostFocus;
            private global::Windows.UI.Xaml.RoutedEventHandler obj46Click;
            private global::Windows.UI.Xaml.Controls.TextChangedEventHandler obj47TextChanged;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj50ItemClick;
            private global::Windows.UI.Xaml.Controls.ItemClickEventHandler obj51ItemClick;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj24ItemsSourceDisabled = false;
            private static bool isobj25IsOpenDisabled = false;
            private static bool isobj26WidthDisabled = false;
            private static bool isobj26HeightDisabled = false;
            private static bool isobj29TextDisabled = false;
            private static bool isobj30VisibilityDisabled = false;
            private static bool isobj31VisibilityDisabled = false;
            private static bool isobj33VisibilityDisabled = false;
            private static bool isobj35ContentDisabled = false;
            private static bool isobj42ForegroundDisabled = false;
            private static bool isobj43SelectedIndexDisabled = false;
            private static bool isobj44SelectedIndexDisabled = false;
            private static bool isobj47TextDisabled = false;
            private static bool isobj48IsOpenDisabled = false;
            private static bool isobj50ItemsSourceDisabled = false;
            private static bool isobj50VisibilityDisabled = false;
            private static bool isobj51ItemsSourceDisabled = false;
            private static bool isobj51VisibilityDisabled = false;
            private static bool isobj52IsSelectedDisabled = false;
            private static bool isobj53IsSelectedDisabled = false;
            private static bool isobj54IsSelectedDisabled = false;

            private AccountPage_obj1_BindingsTracking bindingsTracking;

            public AccountPage_obj1_Bindings()
            {
                this.bindingsTracking = new AccountPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 622 && columnNumber == 13)
                {
                    isobj24ItemsSourceDisabled = true;
                }
                else if (lineNumber == 620 && columnNumber == 13)
                {
                    this.obj24.ItemClick -= obj24ItemClick;
                }
                else if (lineNumber == 642 && columnNumber == 13)
                {
                    isobj25IsOpenDisabled = true;
                }
                else if (lineNumber == 641 && columnNumber == 13)
                {
                    this.obj25.Closed -= obj25Closed;
                }
                else if (lineNumber == 644 && columnNumber == 13)
                {
                    this.obj25.Opened -= obj25Opened;
                }
                else if (lineNumber == 648 && columnNumber == 17)
                {
                    isobj26WidthDisabled = true;
                }
                else if (lineNumber == 649 && columnNumber == 17)
                {
                    isobj26HeightDisabled = true;
                }
                else if (lineNumber == 418 && columnNumber == 17)
                {
                    isobj29TextDisabled = true;
                }
                else if (lineNumber == 427 && columnNumber == 17)
                {
                    isobj30VisibilityDisabled = true;
                }
                else if (lineNumber == 445 && columnNumber == 21)
                {
                    isobj31VisibilityDisabled = true;
                }
                else if (lineNumber == 444 && columnNumber == 21)
                {
                    this.obj31.TextChanged -= obj31TextChanged;
                }
                else if (lineNumber == 452 && columnNumber == 21)
                {
                    this.obj32.GotFocus -= obj32GotFocus;
                }
                else if (lineNumber == 455 && columnNumber == 21)
                {
                    this.obj32.TextChanged -= obj32TextChanged;
                }
                else if (lineNumber == 468 && columnNumber == 21)
                {
                    isobj33VisibilityDisabled = true;
                }
                else if (lineNumber == 581 && columnNumber == 25)
                {
                    isobj35ContentDisabled = true;
                }
                else if (lineNumber == 580 && columnNumber == 25)
                {
                    this.obj35.Click -= obj35Click;
                }
                else if (lineNumber == 486 && columnNumber == 29)
                {
                    this.obj36.Click -= obj36Click;
                }
                else if (lineNumber == 494 && columnNumber == 29)
                {
                    this.obj37.Click -= obj37Click;
                }
                else if (lineNumber == 502 && columnNumber == 29)
                {
                    this.obj38.Click -= obj38Click;
                }
                else if (lineNumber == 511 && columnNumber == 29)
                {
                    this.obj39.Click -= obj39Click;
                }
                else if (lineNumber == 520 && columnNumber == 29)
                {
                    this.obj40.Click -= obj40Click;
                }
                else if (lineNumber == 529 && columnNumber == 29)
                {
                    this.obj41.Click -= obj41Click;
                }
                else if (lineNumber == 541 && columnNumber == 29)
                {
                    isobj42ForegroundDisabled = true;
                }
                else if (lineNumber == 549 && columnNumber == 41)
                {
                    isobj43SelectedIndexDisabled = true;
                }
                else if (lineNumber == 550 && columnNumber == 41)
                {
                    this.obj43.SelectionChanged -= obj43SelectionChanged;
                }
                else if (lineNumber == 287 && columnNumber == 17)
                {
                    isobj44SelectedIndexDisabled = true;
                }
                else if (lineNumber == 288 && columnNumber == 17)
                {
                    this.obj44.SelectionChanged -= obj44SelectionChanged;
                }
                else if (lineNumber == 314 && columnNumber == 17)
                {
                    this.obj45.LostFocus -= obj45LostFocus;
                }
                else if (lineNumber == 389 && columnNumber == 17)
                {
                    this.obj46.Click -= obj46Click;
                }
                else if (lineNumber == 325 && columnNumber == 21)
                {
                    isobj47TextDisabled = true;
                }
                else if (lineNumber == 326 && columnNumber == 21)
                {
                    this.obj47.TextChanged -= obj47TextChanged;
                }
                else if (lineNumber == 333 && columnNumber == 21)
                {
                    isobj48IsOpenDisabled = true;
                }
                else if (lineNumber == 368 && columnNumber == 33)
                {
                    isobj50ItemsSourceDisabled = true;
                }
                else if (lineNumber == 369 && columnNumber == 33)
                {
                    isobj50VisibilityDisabled = true;
                }
                else if (lineNumber == 366 && columnNumber == 33)
                {
                    this.obj50.ItemClick -= obj50ItemClick;
                }
                else if (lineNumber == 352 && columnNumber == 37)
                {
                    isobj51ItemsSourceDisabled = true;
                }
                else if (lineNumber == 354 && columnNumber == 37)
                {
                    isobj51VisibilityDisabled = true;
                }
                else if (lineNumber == 351 && columnNumber == 37)
                {
                    this.obj51.ItemClick -= obj51ItemClick;
                }
                else if (lineNumber == 294 && columnNumber == 21)
                {
                    isobj52IsSelectedDisabled = true;
                }
                else if (lineNumber == 299 && columnNumber == 21)
                {
                    isobj53IsSelectedDisabled = true;
                }
                else if (lineNumber == 304 && columnNumber == 21)
                {
                    isobj54IsSelectedDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 24: // AccountPage.xaml line 615
                        this.obj24 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        this.obj24ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.NotesDataItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.GridView)target).ItemClick += obj24ItemClick;
                        break;
                    case 25: // AccountPage.xaml line 639
                        this.obj25 = (global::Windows.UI.Xaml.Controls.Primitives.Popup)target;
                        this.obj25Closed = (global::System.Object p0, global::System.Object p1) =>
                        {
                            this.dataRoot.NoteDisplayPopUpClosed(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Primitives.Popup)target).Closed += obj25Closed;
                        this.obj25Opened = (global::System.Object p0, global::System.Object p1) =>
                        {
                            this.dataRoot.NoteDisplayPopUpOpened();
                        };
                        ((global::Windows.UI.Xaml.Controls.Primitives.Popup)target).Opened += obj25Opened;
                        break;
                    case 26: // AccountPage.xaml line 646
                        this.obj26 = (global::YourNoteUWP.NoteContent)target;
                        break;
                    case 29: // AccountPage.xaml line 410
                        this.obj29 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 30: // AccountPage.xaml line 420
                        this.obj30 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 31: // AccountPage.xaml line 435
                        this.obj31 = (global::Windows.UI.Xaml.Controls.RichEditBox)target;
                        this.obj31TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.TitleOfNewNoteTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).TextChanged += obj31TextChanged;
                        break;
                    case 32: // AccountPage.xaml line 448
                        this.obj32 = (global::Windows.UI.Xaml.Controls.RichEditBox)target;
                        this.obj32GotFocus = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ContentOfNewNoteGotFocus();
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).GotFocus += obj32GotFocus;
                        this.obj32TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ContentOfNewNoteTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.RichEditBox)target).TextChanged += obj32TextChanged;
                        break;
                    case 33: // AccountPage.xaml line 464
                        this.obj33 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 35: // AccountPage.xaml line 574
                        this.obj35 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj35Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.CreationButtonClick();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj35Click;
                        break;
                    case 36: // AccountPage.xaml line 484
                        this.obj36 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj36Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontBackgroundClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj36Click;
                        break;
                    case 37: // AccountPage.xaml line 491
                        this.obj37 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj37Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontIncreaseClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj37Click;
                        break;
                    case 38: // AccountPage.xaml line 499
                        this.obj38 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj38Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.FontDecreaseClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj38Click;
                        break;
                    case 39: // AccountPage.xaml line 508
                        this.obj39 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj39Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.SmallCapsClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj39Click;
                        break;
                    case 40: // AccountPage.xaml line 517
                        this.obj40 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj40Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.AllCapsClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj40Click;
                        break;
                    case 41: // AccountPage.xaml line 526
                        this.obj41 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj41Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.StrikethroughClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj41Click;
                        break;
                    case 42: // AccountPage.xaml line 537
                        this.obj42 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 43: // AccountPage.xaml line 546
                        this.obj43 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        this.obj43SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.ColorOptionsSelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListBox)target).SelectionChanged += obj43SelectionChanged;
                        break;
                    case 44: // AccountPage.xaml line 281
                        this.obj44 = (global::Windows.UI.Xaml.Controls.ListBox)target;
                        this.obj44SelectionChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs p1) =>
                        {
                            this.dataRoot.MainMenuOptionsSelectionChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListBox)target).SelectionChanged += obj44SelectionChanged;
                        break;
                    case 45: // AccountPage.xaml line 310
                        this.obj45 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        this.obj45LostFocus = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.SearchBoxContainerLostFocus();
                        };
                        ((global::Windows.UI.Xaml.Controls.StackPanel)target).LostFocus += obj45LostFocus;
                        break;
                    case 46: // AccountPage.xaml line 383
                        this.obj46 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj46Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.LogoutContentTapped();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj46Click;
                        break;
                    case 47: // AccountPage.xaml line 318
                        this.obj47 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        this.obj47TextChanged = (global::System.Object p0, global::Windows.UI.Xaml.Controls.TextChangedEventArgs p1) =>
                        {
                            this.dataRoot.SearchTextBoxTextChanged(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.TextBox)target).TextChanged += obj47TextChanged;
                        break;
                    case 48: // AccountPage.xaml line 328
                        this.obj48 = (global::Windows.UI.Xaml.Controls.Primitives.Popup)target;
                        break;
                    case 50: // AccountPage.xaml line 361
                        this.obj50 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        this.obj50ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.SuggestionContainerItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListView)target).ItemClick += obj50ItemClick;
                        break;
                    case 51: // AccountPage.xaml line 347
                        this.obj51 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        this.obj51ItemClick = (global::System.Object p0, global::Windows.UI.Xaml.Controls.ItemClickEventArgs p1) =>
                        {
                            this.dataRoot.RecentlySearchedItemClick(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.ListView)target).ItemClick += obj51ItemClick;
                        break;
                    case 52: // AccountPage.xaml line 291
                        this.obj52 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_52(this.obj52);
                        break;
                    case 53: // AccountPage.xaml line 296
                        this.obj53 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_53(this.obj53);
                        break;
                    case 54: // AccountPage.xaml line 301
                        this.obj54 = (global::Windows.UI.Xaml.Controls.ListBoxItem)target;
                        this.bindingsTracking.RegisterTwoWayListener_54(this.obj54);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAccountPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::YourNoteUWP.AccountPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private bool TryGet_SuggestionContentItemSource(out global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> val)
            {
                global::YourNoteUWP.AccountPage obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.SuggestionContentItemSource;
                    return true;
                }
                else
                {
                    val = default(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>);
                    return false;
                }
            }

            private bool TryGet_(out global::YourNoteUWP.AccountPage val)
            {
                val = this.dataRoot;
                return true;
            }

            private bool TryGet_RecentlySearchedItemSource(out global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> val)
            {
                global::YourNoteUWP.AccountPage obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.RecentlySearchedItemSource;
                    return true;
                }
                else
                {
                    val = default(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>);
                    return false;
                }
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_M_ConvertRtfToText_3609351021(int phase)
            {
                global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> p0;
                if (!TryGet_SuggestionContentItemSource(out p0)) { return; }
                global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> result = this.dataRoot.ConvertRtfToText(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 361
                    if (!isobj50ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj50, result, null);
                    }
                }
            }

            private void Invoke_M_ConvertRtfToText_2679069477(int phase)
            {
                global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> p0;
                if (!TryGet_RecentlySearchedItemSource(out p0)) { return; }
                global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> result = this.dataRoot.ConvertRtfToText(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 347
                    if (!isobj51ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj51, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::YourNoteUWP.AccountPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NotesDataItemSource(obj.NotesDataItemSource, phase);
                        this.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, phase);
                        this.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, phase);
                        this.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, phase);
                        this.Update_TitleText(obj.TitleText, phase);
                        this.Update_NewNoteVisibility(obj.NewNoteVisibility, phase);
                        this.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, phase);
                        this.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, phase);
                        this.Update_CreationButtonContent(obj.CreationButtonContent, phase);
                        this.Update_NoteColorForeground(obj.NoteColorForeground, phase);
                        this.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, phase);
                        this.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, phase);
                        this.Update_SearchTextBoxText(obj.SearchTextBoxText, phase);
                        this.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, phase);
                        this.Update_SuggestionContentItemSource(obj.SuggestionContentItemSource, phase);
                        this.Update_M_ConvertRtfToText_3609351021(phase);
                        this.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, phase);
                        this.Update_RecentlySearchedItemSource(obj.RecentlySearchedItemSource, phase);
                        this.Update_M_ConvertRtfToText_2679069477(phase);
                        this.Update_RecentlySearchedVisibility(obj.RecentlySearchedVisibility, phase);
                        this.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, phase);
                        this.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, phase);
                        this.Update_AllNotesIsSelected(obj.AllNotesIsSelected, phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_NotesDataItemSource(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 615
                    if (!isobj24ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj24, obj, null);
                    }
                }
            }
            private void Update_NoteDisplayPopUpIsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 639
                    if (!isobj25IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(this.obj25, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpWidth(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 646
                    if (!isobj26WidthDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj26, obj);
                    }
                }
            }
            private void Update_NoteContentPopUpHeight(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 646
                    if (!isobj26HeightDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Height(this.obj26, obj);
                    }
                }
            }
            private void Update_TitleText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 410
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj29, obj, null);
                    }
                }
            }
            private void Update_NewNoteVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 420
                    if (!isobj30VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj30, obj);
                    }
                }
            }
            private void Update_TitleOfNewNoteVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 435
                    if (!isobj31VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj31, obj);
                    }
                }
            }
            private void Update_NoteStyleOptionsVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 464
                    if (!isobj33VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj33, obj);
                    }
                }
            }
            private void Update_CreationButtonContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 574
                    if (!isobj35ContentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj35, obj, null);
                    }
                }
            }
            private void Update_NoteColorForeground(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 537
                    if (!isobj42ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj42, obj, null);
                    }
                }
            }
            private void Update_ColorOptionsSelectedIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 546
                    if (!isobj43SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj43, obj);
                    }
                }
            }
            private void Update_MainMenuOptionsSelectedIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 281
                    if (!isobj44SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj44, obj);
                    }
                }
            }
            private void Update_SearchTextBoxText(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 318
                    if (!isobj47TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj47, obj, null);
                    }
                }
            }
            private void Update_SearchPopupIsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 328
                    if (!isobj48IsOpenDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Popup_IsOpen(this.obj48, obj);
                    }
                }
            }
            private void Update_SuggestionContentItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SuggestionContentItemSource(obj);
                if (obj != null)
                {
                    this.Update_M_ConvertRtfToText_3609351021(phase);
                }
            }
            private void Update_M_ConvertRtfToText_3609351021(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj50ItemsSourceDisabled)
                    {
                        this.PendingFunctionBindings["M_ConvertRtfToText_3609351021"] = new InvokeFunctionDelegate(this.Invoke_M_ConvertRtfToText_3609351021); 
                    }
                }
            }
            private void Update_SuggestionContentVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 361
                    if (!isobj50VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj50, obj);
                    }
                }
            }
            private void Update_RecentlySearchedItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_RecentlySearchedItemSource(obj);
                if (obj != null)
                {
                    this.Update_M_ConvertRtfToText_2679069477(phase);
                }
            }
            private void Update_M_ConvertRtfToText_2679069477(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj51ItemsSourceDisabled)
                    {
                        this.PendingFunctionBindings["M_ConvertRtfToText_2679069477"] = new InvokeFunctionDelegate(this.Invoke_M_ConvertRtfToText_2679069477); 
                    }
                }
            }
            private void Update_RecentlySearchedVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 347
                    if (!isobj51VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj51, obj);
                    }
                }
            }
            private void Update_PersonalNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 291
                    if (!isobj52IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj52, obj);
                    }
                }
            }
            private void Update_SharedNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 296
                    if (!isobj53IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj53, obj);
                    }
                }
            }
            private void Update_AllNotesIsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // AccountPage.xaml line 301
                    if (!isobj54IsSelectedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_SelectorItem_IsSelected(this.obj54, obj);
                    }
                }
            }
            private void UpdateTwoWay_52_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.PersonalNotesIsSelected = this.obj52.IsSelected;
                    }
                }
            }
            private void UpdateTwoWay_53_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.SharedNotesIsSelected = this.obj53.IsSelected;
                    }
                }
            }
            private void UpdateTwoWay_54_IsSelected()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.AllNotesIsSelected = this.obj54.IsSelected;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AccountPage_obj1_Bindings> weakRefToBindingObj; 

                public AccountPage_obj1_BindingsTracking(AccountPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountPage_obj1_Bindings>(obj);
                }

                public AccountPage_obj1_Bindings TryGetBindingObject()
                {
                    AccountPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_NotesDataItemSource(null);
                    UpdateChildListeners_SuggestionContentItemSource(null);
                    UpdateChildListeners_RecentlySearchedItemSource(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::YourNoteUWP.AccountPage obj = sender as global::YourNoteUWP.AccountPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                                bindings.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                bindings.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                bindings.Update_TitleText(obj.TitleText, DATA_CHANGED);
                                bindings.Update_NewNoteVisibility(obj.NewNoteVisibility, DATA_CHANGED);
                                bindings.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, DATA_CHANGED);
                                bindings.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, DATA_CHANGED);
                                bindings.Update_CreationButtonContent(obj.CreationButtonContent, DATA_CHANGED);
                                bindings.Update_NoteColorForeground(obj.NoteColorForeground, DATA_CHANGED);
                                bindings.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, DATA_CHANGED);
                                bindings.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, DATA_CHANGED);
                                bindings.Update_SearchTextBoxText(obj.SearchTextBoxText, DATA_CHANGED);
                                bindings.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, DATA_CHANGED);
                                bindings.Update_SuggestionContentItemSource(obj.SuggestionContentItemSource, DATA_CHANGED);
                                bindings.Update_M_ConvertRtfToText_3609351021(DATA_CHANGED);
                                bindings.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, DATA_CHANGED);
                                bindings.Update_RecentlySearchedItemSource(obj.RecentlySearchedItemSource, DATA_CHANGED);
                                bindings.Update_M_ConvertRtfToText_2679069477(DATA_CHANGED);
                                bindings.Update_RecentlySearchedVisibility(obj.RecentlySearchedVisibility, DATA_CHANGED);
                                bindings.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, DATA_CHANGED);
                                bindings.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, DATA_CHANGED);
                                bindings.Update_AllNotesIsSelected(obj.AllNotesIsSelected, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "NotesDataItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NotesDataItemSource(obj.NotesDataItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteDisplayPopUpIsOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteDisplayPopUpIsOpen(obj.NoteDisplayPopUpIsOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpWidth":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpWidth(obj.NoteContentPopUpWidth, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteContentPopUpHeight":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteContentPopUpHeight(obj.NoteContentPopUpHeight, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleText(obj.TitleText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NewNoteVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NewNoteVisibility(obj.NewNoteVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TitleOfNewNoteVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TitleOfNewNoteVisibility(obj.TitleOfNewNoteVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteStyleOptionsVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteStyleOptionsVisibility(obj.NoteStyleOptionsVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CreationButtonContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CreationButtonContent(obj.CreationButtonContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NoteColorForeground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_NoteColorForeground(obj.NoteColorForeground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ColorOptionsSelectedIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ColorOptionsSelectedIndex(obj.ColorOptionsSelectedIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MainMenuOptionsSelectedIndex":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MainMenuOptionsSelectedIndex(obj.MainMenuOptionsSelectedIndex, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchTextBoxText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SearchTextBoxText(obj.SearchTextBoxText, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SearchPopupIsOpen":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SearchPopupIsOpen(obj.SearchPopupIsOpen, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SuggestionContentItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SuggestionContentItemSource(obj.SuggestionContentItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SuggestionContentVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SuggestionContentVisibility(obj.SuggestionContentVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RecentlySearchedItemSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_RecentlySearchedItemSource(obj.RecentlySearchedItemSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RecentlySearchedVisibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_RecentlySearchedVisibility(obj.RecentlySearchedVisibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PersonalNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PersonalNotesIsSelected(obj.PersonalNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SharedNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SharedNotesIsSelected(obj.SharedNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AllNotesIsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_AllNotesIsSelected(obj.AllNotesIsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConvertRtfToText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_M_ConvertRtfToText_3609351021(DATA_CHANGED);
                                        bindings.Update_M_ConvertRtfToText_2679069477(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void UpdateChildListeners_(global::YourNoteUWP.AccountPage obj)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_NotesDataItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void CollectionChanged_NotesDataItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> cache_NotesDataItemSource = null;
                public void UpdateChildListeners_NotesDataItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj)
                {
                    if (obj != cache_NotesDataItemSource)
                    {
                        if (cache_NotesDataItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_NotesDataItemSource).PropertyChanged -= PropertyChanged_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_NotesDataItemSource).CollectionChanged -= CollectionChanged_NotesDataItemSource;
                            cache_NotesDataItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_NotesDataItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_NotesDataItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_NotesDataItemSource;
                        }
                    }
                }
                public void PropertyChanged_SuggestionContentItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_M_ConvertRtfToText_3609351021(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ConvertRtfToText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_M_ConvertRtfToText_3609351021(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void CollectionChanged_SuggestionContentItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                if (obj != null)
                {
                    bindings.Update_M_ConvertRtfToText_3609351021(DATA_CHANGED);
                }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> cache_SuggestionContentItemSource = null;
                public void UpdateChildListeners_SuggestionContentItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj)
                {
                    if (obj != cache_SuggestionContentItemSource)
                    {
                        if (cache_SuggestionContentItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SuggestionContentItemSource).PropertyChanged -= PropertyChanged_SuggestionContentItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_SuggestionContentItemSource).CollectionChanged -= CollectionChanged_SuggestionContentItemSource;
                            cache_SuggestionContentItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_SuggestionContentItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SuggestionContentItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_SuggestionContentItemSource;
                        }
                    }
                }
                public void PropertyChanged_RecentlySearchedItemSource(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_M_ConvertRtfToText_2679069477(DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ConvertRtfToText":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_M_ConvertRtfToText_2679069477(DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                public void CollectionChanged_RecentlySearchedItemSource(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AccountPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note>;
                if (obj != null)
                {
                    bindings.Update_M_ConvertRtfToText_2679069477(DATA_CHANGED);
                }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> cache_RecentlySearchedItemSource = null;
                public void UpdateChildListeners_RecentlySearchedItemSource(global::System.Collections.ObjectModel.ObservableCollection<global::YourNoteUWP.Models.Note> obj)
                {
                    if (obj != cache_RecentlySearchedItemSource)
                    {
                        if (cache_RecentlySearchedItemSource != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_RecentlySearchedItemSource).PropertyChanged -= PropertyChanged_RecentlySearchedItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_RecentlySearchedItemSource).CollectionChanged -= CollectionChanged_RecentlySearchedItemSource;
                            cache_RecentlySearchedItemSource = null;
                        }
                        if (obj != null)
                        {
                            cache_RecentlySearchedItemSource = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_RecentlySearchedItemSource;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_RecentlySearchedItemSource;
                        }
                    }
                }
                public void RegisterTwoWayListener_52(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_52_IsSelected();
                        }
                    });
                }
                public void RegisterTwoWayListener_53(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_53_IsSelected();
                        }
                    });
                }
                public void RegisterTwoWayListener_54(global::Windows.UI.Xaml.Controls.ListBoxItem sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_54_IsSelected();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 24: // AccountPage.xaml line 615
                {
                    this.NotesData = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 25: // AccountPage.xaml line 639
                {
                    this.NoteDisplayPopUp = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 26: // AccountPage.xaml line 646
                {
                    this.NoteContentPopUp = (global::YourNoteUWP.NoteContent)(target);
                }
                break;
            case 29: // AccountPage.xaml line 410
                {
                    this.Title = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 30: // AccountPage.xaml line 420
                {
                    this.NewNote = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 31: // AccountPage.xaml line 435
                {
                    this.TitleOfNewNote = (global::Windows.UI.Xaml.Controls.RichEditBox)(target);
                }
                break;
            case 32: // AccountPage.xaml line 448
                {
                    this.ContentOfNewNote = (global::Windows.UI.Xaml.Controls.RichEditBox)(target);
                }
                break;
            case 33: // AccountPage.xaml line 464
                {
                    this.NoteStyleOptions = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 34: // AccountPage.xaml line 475
                {
                    this.Options = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 35: // AccountPage.xaml line 574
                {
                    this.CreationButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 36: // AccountPage.xaml line 484
                {
                    this.FontBackground = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 37: // AccountPage.xaml line 491
                {
                    this.FontIncrease = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 38: // AccountPage.xaml line 499
                {
                    this.FontDecrease = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 39: // AccountPage.xaml line 508
                {
                    this.SmallCaps = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 40: // AccountPage.xaml line 517
                {
                    this.AllCaps = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 41: // AccountPage.xaml line 526
                {
                    this.Strikethrough = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 42: // AccountPage.xaml line 537
                {
                    this.NoteColor = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 43: // AccountPage.xaml line 546
                {
                    this.ColorOptions = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            case 44: // AccountPage.xaml line 281
                {
                    this.MainMenuOptions = (global::Windows.UI.Xaml.Controls.ListBox)(target);
                }
                break;
            case 45: // AccountPage.xaml line 310
                {
                    this.SearchBoxContainer = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 46: // AccountPage.xaml line 383
                {
                    this.Logout = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 47: // AccountPage.xaml line 318
                {
                    this.SearchTextBox = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 48: // AccountPage.xaml line 328
                {
                    this.SearchPopup = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 49: // AccountPage.xaml line 342
                {
                    this.PopUpContainer = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 50: // AccountPage.xaml line 361
                {
                    this.Suggestion = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 51: // AccountPage.xaml line 347
                {
                    this.RecentlySearched = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 52: // AccountPage.xaml line 291
                {
                    this.PersonalNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 53: // AccountPage.xaml line 296
                {
                    this.SharedNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            case 54: // AccountPage.xaml line 301
                {
                    this.AllNotes = (global::Windows.UI.Xaml.Controls.ListBoxItem)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // AccountPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AccountPage_obj1_Bindings bindings = new AccountPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 15: // AccountPage.xaml line 48
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element15 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AccountPage_obj15_Bindings bindings = new AccountPage_obj15_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element15.DataContext);
                    element15.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element15, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element15, bindings);
                }
                break;
            case 20: // AccountPage.xaml line 19
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element20 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    AccountPage_obj20_Bindings bindings = new AccountPage_obj20_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element20.DataContext);
                    element20.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element20, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element20, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

